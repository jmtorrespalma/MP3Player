C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\main.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\main.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\main.lst) CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR
                    -(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\main.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include <project.h>
  13          #include <string.h>
  14          
  15          char wave[8000] = {0x52, 0x49, 0x46, 0x46, 0x71, 0x55, 0x00, 0x00, 0x57, 0x41, 0x56, 0x45, 0x66, 0x6d, 0x7
             -4, 0x20, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0xf8, 0x2a, 0x00, 0x00, 0xf8, 0x2a, 0x00, 0x00, 0x01, 0x00, 0x0
             -8, 0x00, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x55, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x8
             -0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x8
             -0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x76, 0x77, 0x7c, 0x82, 0x8
             -3, 0x7e, 0x7f, 0x7f, 0x87, 0x88, 0x8b, 0x88, 0x80, 0x83, 0x82, 0x85, 0x83, 0x89, 0x7f, 0x7c, 0x81, 0x87, 0x93, 0x8b, 0x8
             -1, 0x83, 0x8e, 0x8e, 0x95, 0x81, 0x77, 0x7b, 0x7f, 0x87, 0x77, 0x7a, 0x75, 0x7a, 0x83, 0x92, 0x98, 0x84, 0x87, 0x8f, 0x9
             -9, 0x93, 0x8b, 0x81, 0x78, 0x73, 0x7b, 0x85, 0x79, 0x6c, 0x68, 0x76, 0x7a, 0x83, 0x79, 0x61, 0x65, 0x7d, 0x84, 0x78, 0x6
             -8, 0x60, 0x7f, 0x82, 0x7e, 0x80, 0x76, 0x72, 0x6d, 0x7b, 0x79, 0x7e, 0x7a, 0x69, 0x79, 0x7c, 0x7f, 0x85, 0x82, 0x87, 0x8
             -5, 0x87, 0x80, 0x7c, 0x85, 0x80, 0x77, 0x77, 0x7d, 0x81, 0x88, 0x75, 0x69, 0x7a, 0x81, 0x81, 0x7a, 0x77, 0x72, 0x7e, 0x8
             -5, 0x8e, 0x9f, 0x90, 0x7f, 0x90, 0x99, 0x96, 0x8f, 0x84, 0x82, 0x78, 0x86, 0x81, 0x83, 0x74, 0x62, 0x70, 0x6e, 0x7f, 0x6
             -e, 0x69, 0x77, 0x86, 0x7e, 0x7b, 0x7f, 0x75, 0x86, 0x7b, 0x94, 0x8f, 0x71, 0x56, 0x70, 0x9d, 0x99, 0x84, 0x4c, 0x65, 0x8
             -8, 0xa4, 0x8d, 0x6b, 0x70, 0x85, 0xa3, 0xa9, 0xae, 0x60, 0x57, 0x84, 0xbc, 0xba, 0x74, 0x64, 0x7b, 0x8f, 0x7e, 0x88, 0x7
             -5, 0x63, 0x5b, 0x6d, 0x80, 0x89, 0x71, 0x66, 0x80, 0x75, 0x8a, 0x75, 0x6e, 0x78, 0x87, 0x91, 0x9b, 0x90, 0x6b, 0x7c, 0x8
             -e, 0xb8, 0x9b, 0x86, 0x80, 0x89, 0xa5, 0xa9, 0xb4, 0x98, 0x95, 0x91, 0xaf, 0xbf, 0xa3, 0x8e, 0x9c, 0xb3, 0xb5, 0xb0, 0x8
             -b, 0x73, 0x7b, 0x98, 0x9b, 0xa2, 0x75, 0x69, 0x88, 0x9b, 0x97, 0x75, 0x7f, 0x7b, 0x95, 0x9a, 0x8b, 0x89, 0x95, 0x93, 0x7
             -c, 0x93, 0x89, 0x74, 0x5d, 0x60, 0x66, 0x68, 0x51, 0x2b, 0x3c, 0x47, 0x3c, 0x35, 0x41, 0x29, 0x42, 0x5c, 0x70, 0x82, 0x5
             -0, 0x3a, 0x3c, 0x71, 0x7a, 0x65, 0x44, 0x31, 0x48, 0x60, 0x7f, 0x55, 0x44, 0x36, 0x57, 0x81, 0x6b, 0x66, 0x58, 0x6b, 0x8
             -3, 0xa0, 0x9a, 0x7a, 0x6c, 0x8e, 0xba, 0xbe, 0x97, 0x5f, 0x76, 0x96, 0xb0, 0xa3, 0x80, 0x55, 0x60, 0x9a, 0xad, 0xab, 0x6
             -4, 0x5b, 0x94, 0xca, 0xbd, 0x76, 0x7f, 0xa5, 0xc0, 0xc7, 0x8e, 0x7d, 0x96, 0x96, 0xa2, 0x89, 0x8c, 0x86, 0x89, 0x91, 0x7
             -7, 0x7f, 0x72, 0x67, 0x75, 0xa3, 0x9e, 0x76, 0x5e, 0x72, 0xb0, 0xc9, 0x90, 0x7e, 0x8a, 0xa4, 0xc0, 0xab, 0xaa, 0x7c, 0x9
             -8, 0x9d, 0x8e, 0x99, 0x6a, 0x71, 0x86, 0x93, 0x8c, 0x7e, 0x7a, 0x7a, 0x85, 0x97, 0x7a, 0x6c, 0x72, 0x84, 0x9d, 0x8c, 0x7
             -7, 0x5e, 0x8c, 0x91, 0x88, 0x7e, 0x60, 0x6f, 0x68, 0x64, 0x5a, 0x52, 0x6f, 0x6b, 0x66, 0x7a, 0x6c, 0x75, 0x5f, 0x65, 0x8
             -4, 0x78, 0x6a, 0x46, 0x50, 0x65, 0x6c, 0x4b, 0x25, 0x33, 0x4d, 0x53, 0x3d, 0x29, 0x38, 0x4f, 0x68, 0x53, 0x33, 0x3f, 0x3
             -d, 0x77, 0x80, 0x65, 0x5c, 0x72, 0xa7, 0xaa, 0x98, 0x76, 0x64, 0x75, 0xa1, 0x9f, 0x9e, 0x77, 0x7b, 0xbf, 0xd1, 0xcd, 0x9
             -9, 0x99, 0xae, 0xdc, 0xe1, 0xbc, 0xa9, 0xa8, 0xb6, 0xb1, 0xba, 0x9e, 0xa0, 0xa4, 0xad, 0xb8, 0xb7, 0xa5, 0xac, 0xbf, 0xa
             -c, 0xa7, 0x90, 0x98, 0x8c, 0x91, 0xa9, 0x9f, 0x8c, 0x65, 0x7f, 0xa2, 0x96, 0x7a, 0x68, 0x7f, 0x95, 0x98, 0x75, 0x7a, 0xa
             -3, 0x98, 0x88, 0x78, 0x8d, 0x97, 0x7a, 0x6a, 0x6b, 0x8d, 0x90, 0x71, 0x7f, 0x7f, 0x6e, 0x82, 0xa3, 0x94, 0x48, 0x2e, 0x6
             -a, 0x9a, 0x7e, 0x5c, 0x44, 0x5f, 0x87, 0x8e, 0x76, 0x42, 0x64, 0x79, 0x70, 0x64, 0x57, 0x50, 0x45, 0x54, 0x63, 0x68, 0x5
             -a, 0x43, 0x34, 0x7d, 0x9d, 0x6e, 0x29, 0x42, 0x91, 0x82, 0x6b, 0x4a, 0x53, 0x4a, 0x63, 0x81, 0x76, 0x63, 0x53, 0x6f, 0x7
             -0, 0x6e, 0x43, 0x28, 0x2c, 0x50, 0x67, 0x44, 0x2f, 0x4a, 0x71, 0x9c, 0xb1, 0xa2, 0x8b, 0x82, 0xce, 0xed, 0xd0, 0x8c, 0xa
             -3, 0xff, 0xf6, 0xa3, 0x7f, 0x9a, 0xa4, 0xab, 0x95, 0x9b, 0x91, 0x9f, 0xa1, 0xb4, 0xb8, 0xb2, 0xbf, 0xa8, 0xb9, 0xbc, 0xd
             -1, 0xb7, 0x9c, 0x89, 0xa6, 0xcf, 0xbc, 0x9f, 0x98, 0xc3, 0xc0, 0xd5, 0xc2, 0xc9, 0xdd, 0xcd, 0xc4, 0xb7, 0xcd, 0xb8, 0xb
             -b, 0xb3, 0xa7, 0xb0, 0xaa, 0x98, 0x8b, 0xa7, 0x93, 0x85, 0x81, 0x74, 0x6e, 0x48, 0x45, 0x42, 0x57, 0x50, 0x35, 0x4e, 0x5
             -5, 0x60, 0x56, 0x5b, 0x6b, 0x5d, 0x4a, 0x4a, 0x51, 0x28, 0x18, 0x29, 0x49, 0x3a, 0x2a, 0x10, 0x1c, 0x4b, 0x27, 0x1c, 0x2
             -a, 0x4d, 0x41, 0x25, 0x36, 0x4e, 0x54, 0x26, 0x31, 0x73, 0x64, 0x12, 0x16, 0x47, 0x5a, 0x4a, 0x38, 0x45, 0x78, 0x89, 0x5
             -4, 0x45, 0x78, 0x86, 0x43, 0x7c, 0xc3, 0xd8, 0x9c, 0x68, 0xc6, 0xef, 0xd9, 0x7a, 0x96, 0xd2, 0xe1, 0xb1, 0x60, 0x99, 0xc
             -b, 0xb5, 0x85, 0xac, 0xcc, 0xc1, 0xb9, 0xba, 0xf2, 0xff, 0xf7, 0xdc, 0xea, 0xff, 0xf6, 0xf1, 0xd4, 0xcc, 0xb9, 0xb2, 0xc
             -1, 0xc3, 0xa8, 0x98, 0xad, 0xb0, 0x9d, 0x98, 0xba, 0xad, 0x9b, 0xae, 0xbb, 0xc8, 0xa7, 0xa0, 0x97, 0x8d, 0xa2, 0x81, 0x7
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 2   

             -a, 0x5a, 0x48, 0x5c, 0x2f, 0x18, 0x1a, 0x1a, 0x19, 0x0c, 0x0d, 0x01, 0x19, 0x16, 0x03, 0x11, 0x34, 0x48, 0x0f, 0x05, 0x0
             -4, 0x3a, 0x34, 0x12, 0x19, 0x1c, 0x19, 0x08, 0x04, 0x32, 0x24, 0x07, 0x05, 0x3d, 0x6c, 0x6c, 0x40, 0x24, 0x45, 0x88, 0xa
             -8, 0x8b, 0x80, 0x98, 0xbe, 0xac, 0xbc, 0xb0, 0x99, 0x9b, 0x9f, 0xad, 0xa5, 0xaa, 0x81, 0x67, 0x7a, 0x7d, 0xa0, 0xa7, 0x8
             -f, 0xa1, 0xda, 0xfd, 0xfd, 0xef, 0xed, 0xfb, 0xfd, 0xf9, 0xfb, 0xea, 0xe7, 0xdb, 0xd8, 0xc3, 0xa2, 0xa1, 0x9d, 0x97, 0x8
             -d, 0x8a, 0x86, 0x8a, 0xb0, 0xba, 0xb0, 0xb3, 0xc1, 0xc3, 0xbd, 0xc6, 0xb9, 0xac, 0x9b, 0x94, 0xa1, 0x79, 0x5c, 0x5c, 0x4
             -5, 0x44, 0x37, 0x19, 0x22, 0x1a, 0x08, 0x0b, 0x1b, 0x2b, 0x0f, 0x13, 0x27, 0x30, 0x2a, 0x1a, 0x26, 0x41, 0x35, 0x1d, 0x1
             -f, 0x2b, 0x30, 0x19, 0x1f, 0x1d, 0x00, 0x12, 0x37, 0x2e, 0x2f, 0x30, 0x44, 0x61, 0x4b, 0x48, 0x61, 0x7d, 0x81, 0x92, 0x8
             -5, 0x6d, 0x82, 0x8d, 0x97, 0xa3, 0xa4, 0x8f, 0x95, 0xb1, 0xb4, 0x9b, 0xa9, 0xbb, 0xb3, 0xa9, 0xc2, 0xea, 0xe5, 0xe1, 0xc
             -b, 0xcc, 0xef, 0xf5, 0xdf, 0xe3, 0xda, 0xe3, 0xee, 0xe5, 0xd7, 0xc1, 0xc7, 0xd0, 0xb5, 0xa3, 0xad, 0xa6, 0xb1, 0xbf, 0xb
             -c, 0xa3, 0xa4, 0xaf, 0xb8, 0xba, 0xa2, 0x98, 0x96, 0x8d, 0x82, 0x96, 0x85, 0x61, 0x49, 0x5d, 0x6f, 0x43, 0x19, 0x1a, 0x1
             -5, 0x15, 0x29, 0x0c, 0x00, 0x00, 0x0c, 0x1b, 0x1c, 0x01, 0x05, 0x25, 0x12, 0x01, 0x2a, 0x4a, 0x1c, 0x08, 0x44, 0x77, 0x4
             -f, 0x42, 0x60, 0x5e, 0x51, 0x72, 0x8b, 0x6b, 0x57, 0x77, 0xa3, 0x99, 0x87, 0x76, 0x6e, 0x77, 0xb5, 0xbc, 0x85, 0x7b, 0x8
             -1, 0x90, 0xa2, 0xaf, 0x9d, 0xa7, 0xac, 0xd2, 0xe9, 0xdb, 0xdb, 0xec, 0xf4, 0xe8, 0xfb, 0xe3, 0xd9, 0xdf, 0xe4, 0xc8, 0xb
             -f, 0xae, 0x9e, 0xab, 0xa3, 0x9d, 0x80, 0x8c, 0x8d, 0x9d, 0xa8, 0xb0, 0xb0, 0xb0, 0xb1, 0xb2, 0xc4, 0xbf, 0xb8, 0xa7, 0xa
             -a, 0xa1, 0xb3, 0x92, 0x6f, 0x5f, 0x46, 0x3d, 0x2f, 0x1f, 0x09, 0x06, 0x00, 0x0b, 0x08, 0x00, 0x0a, 0x08, 0x03, 0x02, 0x1
             -d, 0x2e, 0x3f, 0x39, 0x3b, 0x5d, 0x69, 0x37, 0x38, 0x6f, 0x58, 0x42, 0x50, 0x50, 0x36, 0x5a, 0x85, 0x5b, 0x1e, 0x24, 0x7
             -5, 0x86, 0x6b, 0x4f, 0x56, 0x77, 0x91, 0x9b, 0x8c, 0x80, 0x85, 0xba, 0xc6, 0xc7, 0xbd, 0xaa, 0xc0, 0xde, 0xdf, 0xc8, 0xc
             -9, 0xc3, 0xd7, 0xd3, 0xd6, 0xc4, 0xac, 0xac, 0xc0, 0xd9, 0xb0, 0xa9, 0x9b, 0xaa, 0xcc, 0xd0, 0x9b, 0x84, 0xa5, 0xb8, 0xc
             -5, 0xb4, 0xc8, 0xc0, 0xbc, 0xbe, 0xc9, 0xcb, 0xbb, 0xb2, 0xa6, 0xac, 0xa0, 0x9b, 0x71, 0x5b, 0x4f, 0x4e, 0x3d, 0x12, 0x0
             -4, 0x00, 0x0c, 0x0c, 0x15, 0x01, 0x0c, 0x02, 0x0b, 0x18, 0x03, 0x00, 0x15, 0x40, 0x3e, 0x48, 0x3d, 0x40, 0x23, 0x37, 0x7
             -d, 0x74, 0x43, 0x18, 0x39, 0x72, 0x84, 0x3d, 0x23, 0x35, 0x6a, 0x89, 0x66, 0x52, 0x49, 0x6b, 0x89, 0xb5, 0x9f, 0x86, 0x8
             -b, 0xc8, 0xf6, 0xeb, 0xe0, 0xc1, 0xdf, 0xf4, 0xff, 0xd8, 0xc6, 0xc5, 0xd8, 0xe5, 0xbb, 0xa2, 0x8f, 0xaa, 0xb1, 0xac, 0x8
             -6, 0x88, 0x96, 0xac, 0xb1, 0xa1, 0xaf, 0xb2, 0xc9, 0xc8, 0xe1, 0xea, 0xe7, 0xd2, 0xe1, 0xec, 0xd8, 0xca, 0xab, 0xa6, 0xa
             -9, 0xa3, 0x6e, 0x54, 0x4c, 0x41, 0x34, 0x29, 0x0f, 0x01, 0x07, 0x09, 0x08, 0x00, 0x03, 0x06, 0x24, 0x19, 0x00, 0x01, 0x2
             -f, 0x45, 0x36, 0x1c, 0x27, 0x4f, 0x62, 0x59, 0x40, 0x2f, 0x46, 0x61, 0x53, 0x48, 0x3a, 0x48, 0x55, 0x69, 0x5f, 0x5b, 0x5
             -9, 0x75, 0x92, 0x97, 0xac, 0x90, 0x9c, 0xc1, 0xe0, 0xdb, 0xd3, 0xb4, 0xd0, 0xec, 0xdb, 0xc5, 0xa8, 0xb7, 0xb8, 0xc7, 0xa
             -e, 0x99, 0x85, 0xaa, 0xa9, 0xa3, 0xaa, 0x9b, 0xab, 0xaa, 0xbd, 0xb2, 0xbb, 0xa4, 0xc2, 0xd9, 0xe1, 0xd5, 0xb8, 0xc7, 0xd
             -2, 0xdd, 0xb7, 0xb5, 0xa9, 0xbb, 0xa0, 0x91, 0x82, 0x64, 0x64, 0x5b, 0x52, 0x20, 0x07, 0x08, 0x26, 0x0e, 0x04, 0x05, 0x0
             -c, 0x11, 0x16, 0x16, 0x06, 0x1b, 0x39, 0x4c, 0x2c, 0x1d, 0x31, 0x79, 0x7f, 0x4f, 0x46, 0x74, 0x80, 0x57, 0x48, 0x51, 0x6
             -c, 0x5b, 0x47, 0x4f, 0x80, 0x68, 0x4c, 0x4f, 0x78, 0xa0, 0x95, 0x84, 0x87, 0xb5, 0xc5, 0xd5, 0xba, 0xd5, 0xd2, 0xde, 0xe
             -7, 0xe5, 0xca, 0xbd, 0xc1, 0xbe, 0xb8, 0x9a, 0xab, 0x9e, 0x9c, 0x93, 0x9e, 0xa4, 0xb1, 0xa2, 0x9c, 0xb2, 0xa1, 0xad, 0xb
             -5, 0xd0, 0xcc, 0xd1, 0xcd, 0xd3, 0xcf, 0xd9, 0xdc, 0xbf, 0xbb, 0xb2, 0xb6, 0x9d, 0x8f, 0x79, 0x62, 0x44, 0x44, 0x32, 0x1
             -5, 0x14, 0x01, 0x04, 0x00, 0x05, 0x07, 0x09, 0x01, 0x0e, 0x0f, 0x00, 0x09, 0x17, 0x2e, 0x2e, 0x3a, 0x47, 0x52, 0x5a, 0x5
             -d, 0x58, 0x53, 0x6a, 0x6d, 0x60, 0x56, 0x67, 0x71, 0x67, 0x64, 0x75, 0x7e, 0x73, 0x78, 0x84, 0x8e, 0x9a, 0xa9, 0xad, 0xb
             -8, 0xbf, 0xbf, 0xe0, 0xee, 0xe3, 0xe0, 0xe9, 0xdf, 0xd4, 0xda, 0xd6, 0xda, 0xd5, 0xc9, 0xba, 0xc7, 0xd1, 0xbd, 0xb5, 0xb
             -9, 0xb7, 0xa9, 0xaf, 0xb5, 0xb8, 0xb6, 0xc1, 0xc1, 0xbe, 0xba, 0xc4, 0xc4, 0xb9, 0xac, 0xac, 0xc2, 0xad, 0x8e, 0x77, 0x7
             -8, 0x6f, 0x59, 0x3b, 0x2a, 0x28, 0x10, 0x01, 0x00, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0d, 0x35, 0x3
             -a, 0x1b, 0x18, 0x3e, 0x5d, 0x4a, 0x40, 0x64, 0x71, 0x62, 0x55, 0x5d, 0x71, 0x78, 0x5f, 0x57, 0x81, 0x8e, 0x76, 0x63, 0x7
             -6, 0x94, 0x98, 0x9a, 0x8c, 0x91, 0xab, 0xc5, 0xc2, 0xaf, 0xc1, 0xd2, 0xd3, 0xc9, 0xd3, 0xd3, 0xd5, 0xd9, 0xdd, 0xdc, 0xd
             -3, 0xdb, 0xdb, 0xcb, 0xbe, 0xcb, 0xc6, 0xc1, 0xb5, 0xbd, 0xbe, 0xb7, 0xcc, 0xce, 0xbf, 0xb4, 0xc8, 0xcb, 0xcd, 0xbe, 0xb
             -1, 0xb2, 0xac, 0xa1, 0x88, 0x7a, 0x78, 0x6e, 0x4c, 0x2e, 0x26, 0x2a, 0x0e, 0x07, 0x00, 0x01, 0x00, 0x07, 0x08, 0x00, 0x0
             -0, 0x00, 0x0e, 0x16, 0x2d, 0x25, 0x14, 0x0d, 0x28, 0x70, 0x5c, 0x27, 0x24, 0x62, 0x70, 0x5b, 0x50, 0x59, 0x5d, 0x59, 0x7
             -5, 0x7a, 0x7f, 0x72, 0x70, 0x8d, 0xab, 0xa5, 0x90, 0x98, 0xb3, 0xbc, 0xb4, 0xbc, 0xc4, 0xc1, 0xbe, 0xc7, 0xd1, 0xcf, 0xc
             -6, 0xc9, 0xcd, 0xd5, 0xc6, 0xc1, 0xbf, 0xd5, 0xdb, 0xb5, 0xaf, 0xb7, 0xc9, 0xb2, 0xa4, 0xb0, 0xc7, 0xc4, 0xb5, 0xb9, 0xb
             -0, 0xbc, 0xc1, 0xbb, 0xae, 0xa6, 0xa1, 0x9c, 0x8d, 0x90, 0x7c, 0x61, 0x61, 0x5c, 0x4c, 0x37, 0x2d, 0x16, 0x18, 0x16, 0x1
             -9, 0x08, 0x01, 0x00, 0x00, 0x0f, 0x08, 0x06, 0x00, 0x1a, 0x1b, 0x1c, 0x30, 0x2e, 0x2b, 0x3f, 0x57, 0x4f, 0x3e, 0x4f, 0x6
             -b, 0x66, 0x6d, 0x6f, 0x7c, 0x75, 0x7e, 0x92, 0x8a, 0x82, 0x95, 0xae, 0xaa, 0x94, 0x98, 0xb4, 0xbc, 0xbf, 0xaf, 0xa7, 0xb
             -9, 0xc9, 0xbf, 0xb8, 0xb6, 0xc6, 0xc2, 0xbd, 0xbe, 0xbe, 0xc1, 0xc3, 0xcd, 0xbe, 0xc4, 0xb4, 0xbe, 0xba, 0xbb, 0xb9, 0xa
             -c, 0xc2, 0xce, 0xcb, 0xaa, 0xb6, 0xc7, 0xcf, 0xba, 0xb2, 0xaf, 0xb2, 0xba, 0x99, 0x7f, 0x70, 0x80, 0x72, 0x52, 0x50, 0x4
             -e, 0x31, 0x23, 0x24, 0x2b, 0x07, 0x00, 0x0c, 0x0d, 0x0a, 0x00, 0x0a, 0x05, 0x20, 0x13, 0x0b, 0x12, 0x3b, 0x28, 0x17, 0x3
             -d, 0x4a, 0x4f, 0x22, 0x4e, 0x56, 0x69, 0x79, 0x61, 0x4d, 0x69, 0xa8, 0xa5, 0x85, 0x75, 0xac, 0xae, 0xab, 0xa0, 0xa5, 0xa
             -a, 0xb0, 0xbd, 0xbd, 0xba, 0xab, 0xc4, 0xc5, 0xc6, 0xa9, 0xac, 0xb1, 0xc7, 0xc3, 0xbb, 0xb0, 0xb5, 0xcd, 0xd4, 0xd2, 0xb
             -8, 0xac, 0xb8, 0xd7, 0xcf, 0xb8, 0xa5, 0xc9, 0xdb, 0xcf, 0xbb, 0xae, 0xc1, 0xcb, 0xc9, 0xaf, 0xaa, 0xa4, 0xa2, 0x91, 0x8
             -e, 0x86, 0x70, 0x63, 0x5f, 0x59, 0x47, 0x2e, 0x22, 0x2e, 0x24, 0x1d, 0x02, 0x07, 0x09, 0x0b, 0x0a, 0x04, 0x08, 0x02, 0x0
             -d, 0x17, 0x2f, 0x22, 0x20, 0x29, 0x37, 0x40, 0x3f, 0x3e, 0x33, 0x42, 0x77, 0x7f, 0x52, 0x5b, 0x88, 0xb0, 0x8b, 0x6b, 0x8
             -8, 0xb1, 0xba, 0xa7, 0x9c, 0xad, 0xc2, 0xba, 0xc8, 0xc2, 0xba, 0xb6, 0xc1, 0xcf, 0xca, 0xb6, 0xb4, 0xc7, 0xc7, 0xbc, 0xa
             -8, 0xae, 0xbb, 0xbc, 0xb4, 0xc0, 0xbf, 0xb6, 0xb4, 0xb4, 0xbf, 0xb1, 0x9f, 0xab, 0xc3, 0xc5, 0xb6, 0xab, 0xc5, 0xd6, 0xc
             -4, 0xa0, 0x9c, 0xb3, 0xc2, 0x9c, 0x7a, 0x7a, 0x81, 0x7d, 0x64, 0x49, 0x3e, 0x3c, 0x35, 0x2d, 0x11, 0x09, 0x04, 0x07, 0x0
             -4, 0x0a, 0x03, 0x00, 0x03, 0x12, 0x20, 0x04, 0x03, 0x0f, 0x40, 0x39, 0x1f, 0x06, 0x27, 0x54, 0x50, 0x4f, 0x42, 0x64, 0x6
             -1, 0x83, 0x8a, 0x91, 0x83, 0x7f, 0xa7, 0xba, 0xbc, 0x8f, 0x96, 0xad, 0xd3, 0xc3, 0xb1, 0xa9, 0xb8, 0xd3, 0xc3, 0xb9, 0xa
             -e, 0xb7, 0xb5, 0xbb, 0xba, 0xb4, 0x9b, 0xb4, 0xcb, 0xcb, 0xb3, 0xa5, 0xc1, 0xc3, 0xc6, 0xb5, 0xb3, 0xad, 0xc1, 0xc9, 0xc
             -b, 0xbd, 0xb8, 0xbc, 0xbd, 0xd2, 0xba, 0xb2, 0xa2, 0xb3, 0xb5, 0xa4, 0x90, 0x78, 0x79, 0x80, 0x6d, 0x4d, 0x40, 0x38, 0x4
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 3   

             -5, 0x29, 0x0d, 0x01, 0x0d, 0x15, 0x03, 0x00, 0x00, 0x05, 0x05, 0x00, 0x0b, 0x28, 0x1e, 0x0a, 0x0b, 0x38, 0x38, 0x24, 0x2
             -2, 0x34, 0x51, 0x51, 0x50, 0x4e, 0x5e, 0x6e, 0x8b, 0x86, 0x81, 0x86, 0xa5, 0xbb, 0xa6, 0x9d, 0xa4, 0xbb, 0xc0, 0xc0, 0xa
             -f, 0xaf, 0xb8, 0xc1, 0xc7, 0xb9, 0xa9, 0xa2, 0xbb, 0xc0, 0xae, 0x97, 0xa3, 0xb6, 0xb7, 0xb9, 0xa2, 0xab, 0xc8, 0xcb, 0xb
             -8, 0xab, 0xbc, 0xc6, 0xc3, 0xb6, 0xb4, 0xbe, 0xbd, 0xbd, 0xb9, 0xbb, 0xbd, 0xb5, 0xb3, 0xb2, 0xb3, 0xb1, 0xa1, 0x95, 0x8
             -e, 0x92, 0x8c, 0x6d, 0x56, 0x59, 0x59, 0x49, 0x32, 0x36, 0x37, 0x21, 0x19, 0x10, 0x19, 0x18, 0x0e, 0x08, 0x15, 0x21, 0x1
             -9, 0x1d, 0x2c, 0x34, 0x18, 0x32, 0x3b, 0x4d, 0x54, 0x27, 0x27, 0x59, 0x84, 0x55, 0x40, 0x5e, 0x96, 0xa2, 0x96, 0x80, 0x9
             -2, 0xad, 0xbe, 0xac, 0x9b, 0xa7, 0xac, 0xc9, 0xbd, 0xbf, 0xa8, 0xb0, 0xbe, 0xc0, 0xc0, 0xa2, 0xa0, 0xaa, 0xcb, 0xc9, 0xb
             -e, 0x9d, 0xae, 0xcc, 0xca, 0xb6, 0xa6, 0xaf, 0xb1, 0xc1, 0xbc, 0xb2, 0x99, 0xa3, 0xb0, 0xc3, 0xb8, 0xa9, 0xa4, 0xa6, 0xc
             -5, 0xbc, 0xb5, 0x96, 0xa6, 0xb4, 0xa4, 0x93, 0x7b, 0x74, 0x79, 0x76, 0x68, 0x56, 0x3d, 0x47, 0x41, 0x32, 0x21, 0x19, 0x1
             -6, 0x17, 0x0f, 0x0c, 0x13, 0x05, 0x0c, 0x06, 0x04, 0x12, 0x1b, 0x2a, 0x30, 0x16, 0x1b, 0x36, 0x53, 0x4d, 0x3b, 0x47, 0x6
             -b, 0x79, 0x6a, 0x7d, 0x8a, 0xa0, 0x8e, 0x9e, 0xb9, 0xb2, 0xaf, 0xa5, 0xad, 0xba, 0xcc, 0xb3, 0xab, 0xb2, 0xbe, 0xb9, 0xc
             -0, 0xae, 0xaa, 0xab, 0xb0, 0xba, 0xa9, 0xaa, 0xaa, 0xba, 0xbd, 0xad, 0xa8, 0xbc, 0xc2, 0xbc, 0x9f, 0xa8, 0xb9, 0xb7, 0xb
             -8, 0xaa, 0xae, 0xb5, 0xc1, 0xb5, 0xba, 0xaf, 0xb0, 0xae, 0xb1, 0xab, 0xaa, 0xa3, 0x7d, 0x8e, 0x8f, 0x8d, 0x62, 0x54, 0x6
             -5, 0x67, 0x4c, 0x33, 0x3c, 0x3b, 0x32, 0x1f, 0x22, 0x27, 0x29, 0x11, 0x22, 0x29, 0x2b, 0x28, 0x22, 0x29, 0x39, 0x4a, 0x3
             -f, 0x4e, 0x39, 0x4d, 0x5a, 0x67, 0x52, 0x43, 0x66, 0x86, 0x8e, 0x68, 0x51, 0x5b, 0xb4, 0xa7, 0x7f, 0x69, 0xa1, 0xdc, 0xc
             -1, 0xa9, 0x8d, 0xad, 0xcb, 0xd9, 0xb1, 0xb0, 0xac, 0xb9, 0xcf, 0xc3, 0xb0, 0x9c, 0xa6, 0xa6, 0xc6, 0xb1, 0x9e, 0x93, 0xa
             -8, 0xc5, 0xbc, 0x9f, 0x98, 0xb2, 0xb3, 0xac, 0x98, 0x9e, 0xa6, 0xa6, 0xa4, 0xb7, 0xb4, 0xb1, 0xaa, 0xb1, 0xba, 0xb5, 0xb
             -4, 0xa3, 0xa6, 0xa8, 0xa4, 0x92, 0x87, 0x7f, 0x77, 0x6d, 0x60, 0x55, 0x4c, 0x39, 0x35, 0x36, 0x1e, 0x19, 0x19, 0x16, 0x0
             -7, 0x00, 0x0c, 0x1e, 0x0e, 0x06, 0x01, 0x18, 0x31, 0x24, 0x1b, 0x19, 0x29, 0x37, 0x41, 0x3c, 0x30, 0x31, 0x63, 0x83, 0x5
             -f, 0x4c, 0x65, 0x95, 0xab, 0x84, 0x71, 0x93, 0xbc, 0xbd, 0x99, 0x9b, 0xba, 0xd8, 0xca, 0xb7, 0xbc, 0xc7, 0xcb, 0xbc, 0xb
             -4, 0xba, 0xc0, 0xb2, 0xab, 0xa7, 0xb5, 0xb1, 0xaa, 0xa5, 0xb0, 0xc1, 0xae, 0xa8, 0xa7, 0xb4, 0xb2, 0xab, 0xa6, 0xb0, 0xa
             -c, 0xa6, 0xad, 0xb4, 0xbb, 0xab, 0xa3, 0xa6, 0xb5, 0xad, 0xa3, 0xa2, 0x9b, 0x90, 0x97, 0x8b, 0x83, 0x73, 0x64, 0x71, 0x6
             -2, 0x5c, 0x4e, 0x40, 0x40, 0x49, 0x3e, 0x29, 0x20, 0x25, 0x2c, 0x29, 0x18, 0x16, 0x25, 0x1f, 0x23, 0x1d, 0x32, 0x3e, 0x3
             -b, 0x33, 0x30, 0x3e, 0x4a, 0x4a, 0x3c, 0x39, 0x39, 0x56, 0x55, 0x57, 0x52, 0x56, 0x6c, 0x77, 0x88, 0x84, 0x7f, 0x7a, 0xa
             -2, 0xb6, 0xb6, 0xa8, 0xa0, 0xb1, 0xc1, 0xcf, 0xc1, 0xbd, 0xba, 0xca, 0xc6, 0xc7, 0xbc, 0xad, 0xae, 0xad, 0xc1, 0xbc, 0xb
             -9, 0xa3, 0x9f, 0xac, 0xbd, 0xb4, 0x9b, 0x8f, 0x93, 0xaa, 0x9f, 0x94, 0x87, 0x97, 0x9e, 0xa1, 0xa3, 0x9f, 0xa6, 0xae, 0xb
             -d, 0xb6, 0xbe, 0xb9, 0xb2, 0xaa, 0xa8, 0x9e, 0x96, 0x96, 0x7f, 0x6e, 0x63, 0x5e, 0x4a, 0x35, 0x2d, 0x34, 0x23, 0x1d, 0x0
             -b, 0x03, 0x11, 0x12, 0x0b, 0x02, 0x08, 0x10, 0x20, 0x19, 0x1d, 0x33, 0x3d, 0x47, 0x4b, 0x49, 0x4f, 0x4c, 0x57, 0x64, 0x5
             -b, 0x57, 0x58, 0x76, 0x83, 0x7a, 0x6d, 0x72, 0x88, 0x99, 0x93, 0x87, 0x8f, 0x9b, 0xb1, 0xa3, 0x9d, 0xa8, 0xb4, 0xbc, 0xb
             -8, 0xb8, 0xb7, 0xc0, 0xc0, 0xbd, 0xc6, 0xcb, 0xc1, 0xc1, 0xb9, 0xbf, 0xca, 0xbc, 0xae, 0xad, 0xba, 0xc0, 0xbd, 0xaa, 0xa
             -1, 0xa2, 0xa5, 0xa7, 0x9d, 0x99, 0x9e, 0x9a, 0x98, 0xa5, 0xa7, 0xa2, 0x9f, 0x9d, 0xa4, 0xa7, 0xa6, 0xa8, 0xa9, 0x9e, 0x9
             -5, 0x97, 0x8e, 0x89, 0x7d, 0x65, 0x5e, 0x60, 0x5c, 0x44, 0x32, 0x23, 0x1f, 0x19, 0x11, 0x10, 0x0a, 0x0a, 0x06, 0x06, 0x0
             -9, 0x08, 0x12, 0x1e, 0x17, 0x19, 0x1f, 0x46, 0x55, 0x4d, 0x44, 0x3d, 0x55, 0x67, 0x61, 0x52, 0x64, 0x6d, 0x73, 0x6b, 0x6
             -b, 0x94, 0xa6, 0x9a, 0x87, 0x9d, 0xb8, 0xbc, 0xb2, 0xa9, 0xac, 0xc4, 0xd4, 0xc9, 0xc7, 0xcc, 0xd5, 0xd5, 0xcd, 0xc9, 0xd
             -7, 0xd5, 0xc7, 0xba, 0xb6, 0xbe, 0xb8, 0xb4, 0xb4, 0xb7, 0xaf, 0xb6, 0xb2, 0xb3, 0xb3, 0xa6, 0xab, 0xa7, 0xae, 0xa7, 0xa
             -0, 0x9a, 0x9d, 0xa3, 0xa7, 0xaa, 0x9b, 0x92, 0x94, 0x9c, 0x9c, 0x98, 0x8d, 0x84, 0x7d, 0x7e, 0x79, 0x71, 0x70, 0x63, 0x5
             -3, 0x4d, 0x50, 0x3e, 0x35, 0x31, 0x2e, 0x28, 0x18, 0x0e, 0x11, 0x17, 0x0d, 0x11, 0x0e, 0x15, 0x1c, 0x19, 0x16, 0x21, 0x3
             -b, 0x35, 0x30, 0x30, 0x3c, 0x59, 0x59, 0x49, 0x4c, 0x59, 0x5f, 0x55, 0x4f, 0x60, 0x76, 0x82, 0x76, 0x7e, 0x88, 0x94, 0xa
             -1, 0xa9, 0xb9, 0xb8, 0xb5, 0xb6, 0xbd, 0xd0, 0xdc, 0xd4, 0xc9, 0xc8, 0xce, 0xd2, 0xd3, 0xc8, 0xc6, 0xc2, 0xba, 0xba, 0xb
             -4, 0xb8, 0xb4, 0xb2, 0xb1, 0xaf, 0xae, 0xab, 0xaa, 0xac, 0xb6, 0xb3, 0xae, 0xa9, 0xa6, 0xab, 0xa3, 0x9c, 0x9e, 0x9d, 0xa
             -3, 0xa1, 0x9f, 0xa8, 0xa8, 0xa4, 0xa0, 0x9e, 0x9c, 0xa5, 0xa3, 0x8d, 0x7d, 0x7d, 0x78, 0x68, 0x64, 0x62, 0x51, 0x3d, 0x3
             -3, 0x2d, 0x27, 0x24, 0x19, 0x09, 0x07, 0x07, 0x00, 0x00, 0x02, 0x04, 0x06, 0x00, 0x06, 0x15, 0x1a, 0x18, 0x1c, 0x34, 0x4
             -5, 0x3e, 0x35, 0x44, 0x54, 0x5c, 0x62, 0x62, 0x5f, 0x61, 0x5c, 0x57, 0x63, 0x72, 0x84, 0x89, 0x7c, 0x75, 0x8f, 0xad, 0xa
             -f, 0xb3, 0xbe, 0xc5, 0xc8, 0xc9, 0xcd, 0xd7, 0xdd, 0xd9, 0xcf, 0xcd, 0xce, 0xd4, 0xd0, 0xc9, 0xca, 0xca, 0xc8, 0xb6, 0xb
             -2, 0xb9, 0xc1, 0xc6, 0xbb, 0xad, 0xaa, 0xb7, 0xb5, 0xad, 0xac, 0xae, 0xa8, 0xa0, 0xa0, 0x9c, 0x9d, 0x9c, 0x9e, 0xa0, 0x9
             -e, 0xa2, 0x9a, 0x98, 0xa2, 0xa1, 0x9e, 0x97, 0x93, 0x94, 0x88, 0x7c, 0x70, 0x6b, 0x68, 0x5e, 0x50, 0x49, 0x4b, 0x39, 0x2
             -9, 0x25, 0x28, 0x29, 0x1e, 0x13, 0x0e, 0x0c, 0x0a, 0x0b, 0x0b, 0x12, 0x0e, 0x08, 0x11, 0x16, 0x21, 0x30, 0x3c, 0x48, 0x4
             -e, 0x53, 0x67, 0x73, 0x6f, 0x6d, 0x6c, 0x76, 0x7f, 0x75, 0x69, 0x6a, 0x6c, 0x6d, 0x6f, 0x71, 0x81, 0x8f, 0x90, 0x90, 0x9
             -d, 0xb3, 0xbb, 0xbb, 0xcc, 0xd5, 0xd4, 0xd8, 0xd9, 0xe2, 0xe6, 0xd9, 0xcd, 0xd0, 0xcf, 0xca, 0xc3, 0xc0, 0xba, 0xb5, 0xb
             -1, 0xa9, 0xac, 0xac, 0xa7, 0xa2, 0xa0, 0xa4, 0xa6, 0xa1, 0x9b, 0xa2, 0xa6, 0xa4, 0x9b, 0x96, 0x9a, 0x99, 0x9a, 0x9b, 0x9
             -e, 0x9e, 0xa6, 0xaa, 0x9e, 0x9c, 0x9e, 0x9d, 0x92, 0x8e, 0x92, 0x84, 0x79, 0x66, 0x53, 0x54, 0x51, 0x4a, 0x42, 0x3d, 0x3
             -2, 0x24, 0x1f, 0x1f, 0x26, 0x26, 0x1b, 0x15, 0x18, 0x17, 0x10, 0x15, 0x25, 0x27, 0x23, 0x20, 0x2b, 0x38, 0x34, 0x37, 0x4
             -8, 0x54, 0x61, 0x60, 0x51, 0x55, 0x59, 0x5c, 0x5b, 0x5f, 0x62, 0x51, 0x4e, 0x4b, 0x65, 0x89, 0x90, 0x97, 0x9e, 0xa1, 0x9
             -f, 0xa9, 0xbe, 0xd2, 0xe3, 0xe9, 0xd8, 0xd4, 0xd4, 0xd2, 0xd2, 0xd0, 0xdd, 0xce, 0xbd, 0xaf, 0xa2, 0xaa, 0xaa, 0xb2, 0xb
             -8, 0xb4, 0xae, 0xa5, 0xa3, 0xa7, 0xa8, 0xb4, 0xb7, 0xbb, 0xbb, 0xaf, 0xa8, 0xa9, 0xb2, 0xad, 0xa8, 0xa4, 0xa0, 0xa3, 0x9
             -a, 0x96, 0x9f, 0xa1, 0x9f, 0x94, 0x8b, 0x8f, 0x8d, 0x8b, 0x82, 0x84, 0x83, 0x74, 0x6d, 0x62, 0x5c, 0x54, 0x53, 0x51, 0x4
             -e, 0x4a, 0x3d, 0x35, 0x31, 0x32, 0x2a, 0x23, 0x21, 0x1d, 0x10, 0x06, 0x0a, 0x0d, 0x18, 0x1e, 0x22, 0x23, 0x1f, 0x24, 0x2
             -5, 0x2e, 0x3f, 0x4a, 0x56, 0x5e, 0x5d, 0x56, 0x56, 0x5d, 0x64, 0x70, 0x6e, 0x65, 0x68, 0x70, 0x7a, 0x84, 0x8c, 0x9e, 0xa
             -f, 0xab, 0xaa, 0xb5, 0xc2, 0xc3, 0xc4, 0xd6, 0xe3, 0xe1, 0xd5, 0xcb, 0xce, 0xd0, 0xc7, 0xc1, 0xc6, 0xc8, 0xb5, 0xa6, 0xa
             -7, 0xae, 0xb5, 0xad, 0xb0, 0xba, 0xb8, 0xb3, 0xb0, 0xb8, 0xc1, 0xbb, 0xbb, 0xb5, 0xb1, 0xaf, 0x9d, 0x99, 0x9a, 0x9a, 0x9
             -3, 0x8b, 0x8e, 0x87, 0x80, 0x7c, 0x7d, 0x87, 0x8b, 0x87, 0x87, 0x86, 0x7e, 0x7a, 0x70, 0x6c, 0x69, 0x62, 0x5e, 0x56, 0x5
             -5, 0x4f, 0x42, 0x3e, 0x3e, 0x39, 0x30, 0x2c, 0x29, 0x1c, 0x12, 0x0d, 0x10, 0x13, 0x12, 0x1b, 0x2a, 0x30, 0x27, 0x29, 0x3
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 4   

             -0, 0x38, 0x40, 0x4b, 0x56, 0x57, 0x5c, 0x54, 0x54, 0x53, 0x53, 0x5b, 0x5b, 0x64, 0x5c, 0x50, 0x51, 0x5e, 0x7a, 0x89, 0x9
             -2, 0xa3, 0xb1, 0xb0, 0xad, 0xba, 0xc9, 0xcd, 0xd9, 0xeb, 0xec, 0xe5, 0xdc, 0xd3, 0xd0, 0xd0, 0xcb, 0xc6, 0xc1, 0xb8, 0xa
             -c, 0xa4, 0xa3, 0xa8, 0xb0, 0xb1, 0xb9, 0xc1, 0xb7, 0xb4, 0xb4, 0xb6, 0xb7, 0xb9, 0xb8, 0xb4, 0xb8, 0xac, 0x9f, 0x9b, 0x9
             -f, 0xa3, 0x9b, 0x99, 0x96, 0x93, 0x91, 0x8d, 0x8b, 0x89, 0x8b, 0x88, 0x89, 0x89, 0x84, 0x80, 0x74, 0x6b, 0x68, 0x5f, 0x5
             -c, 0x58, 0x57, 0x4e, 0x3d, 0x36, 0x2f, 0x27, 0x1e, 0x1b, 0x1f, 0x1d, 0x15, 0x0c, 0x04, 0x02, 0x03, 0x08, 0x18, 0x1e, 0x2
             -8, 0x2a, 0x22, 0x29, 0x34, 0x4d, 0x59, 0x5f, 0x6c, 0x65, 0x62, 0x61, 0x5f, 0x6c, 0x70, 0x76, 0x78, 0x65, 0x5b, 0x4b, 0x5
             -7, 0x6c, 0x6d, 0x8a, 0xa1, 0xaa, 0xa9, 0xa3, 0xb1, 0xbc, 0xd3, 0xe6, 0xf1, 0xfd, 0xf9, 0xea, 0xe0, 0xdc, 0xd4, 0xd0, 0xc
             -e, 0xc9, 0xc1, 0xb1, 0xa2, 0x9b, 0x9e, 0x9c, 0x9b, 0xac, 0xaf, 0xb2, 0xb5, 0xaf, 0xad, 0xac, 0xae, 0xb1, 0xb9, 0xba, 0xb
             -1, 0xac, 0xa8, 0x96, 0x92, 0x96, 0x97, 0x9d, 0x99, 0x96, 0x90, 0x89, 0x81, 0x7e, 0x81, 0x7f, 0x7c, 0x7c, 0x78, 0x6e, 0x6
             -b, 0x5f, 0x59, 0x57, 0x54, 0x4f, 0x4c, 0x4e, 0x3c, 0x32, 0x2e, 0x26, 0x22, 0x1b, 0x1e, 0x1e, 0x19, 0x11, 0x06, 0x0b, 0x0
             -c, 0x08, 0x0f, 0x21, 0x32, 0x30, 0x32, 0x3c, 0x45, 0x48, 0x4c, 0x5a, 0x63, 0x6c, 0x69, 0x63, 0x6c, 0x74, 0x78, 0x7c, 0x7
             -c, 0x79, 0x6f, 0x67, 0x61, 0x60, 0x79, 0x86, 0x94, 0xac, 0xb5, 0xb9, 0xb7, 0xbd, 0xbe, 0xc3, 0xd6, 0xdf, 0xe7, 0xee, 0xe
             -9, 0xe1, 0xd7, 0xc6, 0xc0, 0xc2, 0xc2, 0xba, 0xb8, 0xb7, 0xab, 0x9f, 0x9d, 0xa0, 0xa9, 0xb3, 0xb2, 0xba, 0xbd, 0xb7, 0xa
             -f, 0xad, 0xb1, 0xaf, 0xae, 0xad, 0xab, 0xa6, 0x9c, 0x90, 0x8e, 0x8b, 0x87, 0x88, 0x89, 0x89, 0x80, 0x78, 0x76, 0x77, 0x7
             -5, 0x73, 0x72, 0x71, 0x6a, 0x61, 0x5b, 0x51, 0x4d, 0x47, 0x41, 0x43, 0x3f, 0x3a, 0x32, 0x2c, 0x2a, 0x22, 0x20, 0x22, 0x2
             -5, 0x23, 0x1b, 0x1c, 0x1e, 0x1b, 0x19, 0x1c, 0x23, 0x2c, 0x2a, 0x2e, 0x3f, 0x4e, 0x51, 0x4e, 0x62, 0x6c, 0x65, 0x67, 0x6
             -9, 0x76, 0x7d, 0x82, 0x89, 0x8d, 0x8b, 0x77, 0x69, 0x6d, 0x65, 0x5d, 0x6d, 0x82, 0x97, 0x9a, 0xa0, 0xa9, 0xab, 0xb4, 0xb
             -9, 0xcf, 0xe3, 0xe4, 0xe8, 0xee, 0xe9, 0xe0, 0xd8, 0xd9, 0xdb, 0xd4, 0xcb, 0xc2, 0xc1, 0xbe, 0xaa, 0xa3, 0xa9, 0xa8, 0xa
             -6, 0xa8, 0xb3, 0xb8, 0xaa, 0xa5, 0xaa, 0xae, 0xb0, 0xae, 0xaf, 0xb1, 0xa7, 0x9f, 0x8e, 0x83, 0x80, 0x7b, 0x84, 0x86, 0x8
             -5, 0x87, 0x82, 0x82, 0x7c, 0x6d, 0x6d, 0x73, 0x74, 0x70, 0x6d, 0x72, 0x67, 0x58, 0x53, 0x45, 0x3f, 0x3e, 0x3e, 0x3c, 0x3
             -b, 0x39, 0x31, 0x25, 0x22, 0x26, 0x26, 0x2c, 0x30, 0x30, 0x30, 0x29, 0x29, 0x27, 0x26, 0x2f, 0x34, 0x36, 0x3d, 0x3e, 0x4
             -5, 0x47, 0x4b, 0x56, 0x54, 0x5a, 0x60, 0x5e, 0x6c, 0x73, 0x75, 0x77, 0x73, 0x7a, 0x78, 0x7b, 0x87, 0x87, 0x8c, 0x83, 0x7
             -6, 0x7e, 0x88, 0x90, 0x9f, 0xb2, 0xc6, 0xd2, 0xd0, 0xcf, 0xd4, 0xda, 0xdd, 0xdf, 0xea, 0xec, 0xdf, 0xd9, 0xcf, 0xc5, 0xc
             -2, 0xb6, 0xb7, 0xb9, 0xb0, 0xa9, 0xa8, 0xa8, 0xa2, 0x9d, 0x9e, 0xa2, 0xa0, 0xa5, 0xa7, 0xb1, 0xb3, 0xa6, 0xa7, 0xa0, 0x9
             -b, 0x93, 0x95, 0x90, 0x89, 0x82, 0x74, 0x72, 0x6c, 0x68, 0x6a, 0x72, 0x74, 0x74, 0x75, 0x70, 0x6d, 0x68, 0x66, 0x68, 0x6
             -d, 0x69, 0x5f, 0x5e, 0x5c, 0x4c, 0x40, 0x3c, 0x3c, 0x3c, 0x39, 0x3a, 0x3b, 0x37, 0x30, 0x24, 0x1c, 0x20, 0x1e, 0x20, 0x2
             -c, 0x30, 0x37, 0x2f, 0x2c, 0x32, 0x2e, 0x37, 0x3c, 0x46, 0x5c, 0x5c, 0x54, 0x58, 0x56, 0x55, 0x53, 0x5e, 0x72, 0x74, 0x7
             -2, 0x75, 0x7a, 0x79, 0x7c, 0x81, 0x8c, 0x96, 0x94, 0x9a, 0x98, 0x94, 0x86, 0x74, 0x7b, 0x80, 0x8b, 0x9c, 0xa5, 0xb4, 0xb
             -9, 0xb7, 0xb9, 0xbe, 0xc6, 0xcd, 0xdd, 0xed, 0xf3, 0xf5, 0xed, 0xe0, 0xd7, 0xce, 0xc7, 0xc2, 0xc2, 0xc0, 0xb3, 0xaa, 0xa
             -6, 0x9a, 0x94, 0x97, 0x9a, 0x9f, 0xa0, 0xa5, 0xab, 0xa5, 0x9d, 0x9c, 0x99, 0x94, 0x90, 0x93, 0x95, 0x93, 0x8e, 0x8c, 0x8
             -9, 0x83, 0x80, 0x7e, 0x7c, 0x7c, 0x7b, 0x74, 0x71, 0x6f, 0x66, 0x66, 0x6a, 0x6c, 0x66, 0x5f, 0x5d, 0x53, 0x4a, 0x43, 0x4
             -1, 0x3f, 0x3a, 0x38, 0x38, 0x37, 0x32, 0x2c, 0x27, 0x29, 0x2c, 0x29, 0x2b, 0x2f, 0x31, 0x32, 0x30, 0x35, 0x38, 0x39, 0x3
             -f, 0x3d, 0x41, 0x4d, 0x54, 0x5a, 0x60, 0x60, 0x5f, 0x60, 0x69, 0x72, 0x79, 0x83, 0x8c, 0x96, 0x94, 0x90, 0x95, 0x90, 0x8
             -c, 0x8f, 0x90, 0x8d, 0x8a, 0x87, 0x7d, 0x79, 0x7c, 0x7f, 0x87, 0x94, 0xa3, 0xb1, 0xb8, 0xc3, 0xcc, 0xce, 0xd3, 0xda, 0xd
             -f, 0xe4, 0xe3, 0xde, 0xd7, 0xce, 0xc7, 0xbe, 0xbb, 0xb7, 0xb0, 0xb0, 0xad, 0xaa, 0xa3, 0x98, 0x98, 0x95, 0x93, 0x99, 0x9
             -9, 0x96, 0x99, 0x99, 0x98, 0x91, 0x8e, 0x90, 0x8d, 0x8c, 0x89, 0x86, 0x83, 0x79, 0x76, 0x78, 0x7a, 0x79, 0x79, 0x7f, 0x7
             -f, 0x7b, 0x7b, 0x7e, 0x79, 0x74, 0x77, 0x76, 0x73, 0x6f, 0x6c, 0x64, 0x61, 0x59, 0x48, 0x47, 0x49, 0x43, 0x3c, 0x3c, 0x3
             -9, 0x37, 0x38, 0x38, 0x3d, 0x39, 0x33, 0x36, 0x36, 0x34, 0x36, 0x38, 0x3b, 0x3d, 0x3d, 0x3a, 0x3f, 0x47, 0x3f, 0x42, 0x4
             -c, 0x4e, 0x4e, 0x4f, 0x59, 0x5c, 0x5f, 0x6c, 0x74, 0x7c, 0x82, 0x83, 0x89, 0x91, 0x8f, 0x8e, 0x91, 0x96, 0x99, 0x96, 0x9
             -5, 0x94, 0x92, 0x81, 0x80, 0x90, 0x95, 0x98, 0xa2, 0xb5, 0xbd, 0xbf, 0xc3, 0xc9, 0xd2, 0xd0, 0xd9, 0xe5, 0xe8, 0xea, 0xe
             -3, 0xdd, 0xdb, 0xcd, 0xc1, 0xc3, 0xc5, 0xbe, 0xb3, 0xae, 0xa3, 0x9b, 0x8f, 0x88, 0x8d, 0x8c, 0x89, 0x8c, 0x95, 0x95, 0x9
             -2, 0x94, 0x93, 0x8f, 0x8a, 0x87, 0x85, 0x83, 0x7e, 0x78, 0x75, 0x74, 0x72, 0x70, 0x71, 0x72, 0x74, 0x71, 0x6d, 0x70, 0x6
             -f, 0x6f, 0x6f, 0x73, 0x75, 0x70, 0x6f, 0x6a, 0x64, 0x5f, 0x59, 0x59, 0x57, 0x53, 0x50, 0x4e, 0x4b, 0x47, 0x43, 0x3d, 0x4
             -0, 0x41, 0x3c, 0x3d, 0x3a, 0x36, 0x38, 0x3f, 0x40, 0x42, 0x3f, 0x3c, 0x44, 0x49, 0x4e, 0x52, 0x57, 0x59, 0x57, 0x5f, 0x5
             -f, 0x5b, 0x5d, 0x5a, 0x59, 0x5c, 0x63, 0x6d, 0x6d, 0x72, 0x74, 0x6e, 0x71, 0x73, 0x83, 0x8a, 0x87, 0x87, 0x86, 0x84, 0x7
             -a, 0x80, 0x8b, 0x8e, 0x9b, 0xa7, 0xb1, 0xb7, 0xb7, 0xba, 0xc2, 0xc7, 0xd0, 0xd7, 0xdc, 0xe4, 0xe2, 0xda, 0xd9, 0xd7, 0xc
             -f, 0xcd, 0xce, 0xcb, 0xc8, 0xc1, 0xba, 0xb4, 0xb0, 0xad, 0xa7, 0xa4, 0xa3, 0x98, 0x92, 0x91, 0x90, 0x8e, 0x86, 0x8a, 0x8
             -d, 0x88, 0x89, 0x86, 0x84, 0x81, 0x77, 0x77, 0x77, 0x72, 0x6f, 0x6b, 0x69, 0x6a, 0x64, 0x62, 0x6a, 0x69, 0x68, 0x68, 0x6
             -5, 0x68, 0x67, 0x66, 0x6b, 0x6e, 0x62, 0x5c, 0x5d, 0x55, 0x55, 0x50, 0x4b, 0x49, 0x45, 0x3d, 0x38, 0x3f, 0x3d, 0x3b, 0x3
             -d, 0x3e, 0x40, 0x3f, 0x3c, 0x3e, 0x43, 0x45, 0x46, 0x42, 0x43, 0x43, 0x42, 0x4d, 0x52, 0x4c, 0x4e, 0x50, 0x53, 0x58, 0x4
             -f, 0x4c, 0x51, 0x56, 0x5d, 0x59, 0x5c, 0x63, 0x64, 0x69, 0x6f, 0x74, 0x74, 0x73, 0x75, 0x74, 0x73, 0x74, 0x71, 0x73, 0x7
             -c, 0x82, 0x91, 0x9b, 0xa5, 0xae, 0xae, 0xb4, 0xc0, 0xc7, 0xcc, 0xd3, 0xd9, 0xde, 0xe0, 0xdf, 0xdc, 0xdd, 0xdc, 0xd4, 0xd
             -5, 0xd2, 0xce, 0xc4, 0xb8, 0xb7, 0xb5, 0xae, 0xa5, 0xa2, 0xa4, 0x9c, 0x9a, 0x9a, 0x98, 0x97, 0x93, 0x93, 0x91, 0x92, 0x9
             -2, 0x8e, 0x8f, 0x8e, 0x8e, 0x86, 0x85, 0x83, 0x72, 0x6a, 0x66, 0x60, 0x64, 0x63, 0x62, 0x64, 0x61, 0x60, 0x5c, 0x63, 0x6
             -9, 0x6e, 0x72, 0x6e, 0x6d, 0x6d, 0x6d, 0x6e, 0x70, 0x6b, 0x6e, 0x6a, 0x68, 0x6d, 0x5b, 0x5d, 0x5a, 0x53, 0x53, 0x56, 0x5
             -7, 0x50, 0x59, 0x4b, 0x40, 0x46, 0x42, 0x4b, 0x52, 0x4e, 0x4a, 0x45, 0x46, 0x51, 0x4f, 0x4f, 0x55, 0x54, 0x56, 0x58, 0x5
             -d, 0x5c, 0x5b, 0x66, 0x6c, 0x6a, 0x6c, 0x70, 0x76, 0x77, 0x77, 0x75, 0x7b, 0x80, 0x7a, 0x84, 0x84, 0x7d, 0x82, 0x86, 0x7
             -f, 0x81, 0x86, 0x80, 0x89, 0x95, 0x9d, 0xa3, 0xa8, 0xb6, 0xbc, 0xb9, 0xbe, 0xc7, 0xca, 0xd0, 0xd5, 0xdd, 0xe0, 0xe0, 0xd
             -b, 0xdb, 0xdd, 0xd2, 0xcf, 0xcd, 0xcd, 0xc7, 0xbe, 0xb5, 0xb1, 0xb0, 0xa9, 0xa2, 0x9e, 0x9d, 0x94, 0x93, 0x91, 0x8c, 0x8
             -d, 0x87, 0x87, 0x8b, 0x8a, 0x89, 0x89, 0x80, 0x80, 0x7b, 0x78, 0x79, 0x76, 0x75, 0x6f, 0x6b, 0x64, 0x63, 0x5e, 0x5e, 0x5
             -e, 0x5f, 0x60, 0x60, 0x69, 0x63, 0x61, 0x61, 0x64, 0x62, 0x62, 0x65, 0x61, 0x66, 0x62, 0x60, 0x60, 0x5d, 0x5b, 0x60, 0x5
             -a, 0x5c, 0x65, 0x56, 0x60, 0x5e, 0x51, 0x5e, 0x55, 0x4d, 0x5e, 0x55, 0x4d, 0x58, 0x4a, 0x59, 0x55, 0x4b, 0x5c, 0x57, 0x5
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 5   

             -7, 0x5f, 0x5a, 0x61, 0x6a, 0x66, 0x5f, 0x65, 0x6f, 0x76, 0x7d, 0x7e, 0x7a, 0x76, 0x81, 0x86, 0x80, 0x88, 0x8b, 0x8a, 0x8
             -b, 0x8b, 0x88, 0x8f, 0x8d, 0x8a, 0x94, 0x91, 0x98, 0x98, 0x8e, 0x8f, 0x91, 0x99, 0xa1, 0xa2, 0xa6, 0xad, 0xad, 0xab, 0xa
             -9, 0xad, 0xab, 0xb1, 0xba, 0xb5, 0xb9, 0xb6, 0xae, 0xb5, 0xb3, 0xac, 0xb4, 0xb1, 0xac, 0xae, 0xa7, 0xa6, 0xa0, 0x9c, 0x9
             -f, 0x9c, 0x9c, 0x9a, 0x93, 0x8c, 0x8a, 0x89, 0x86, 0x81, 0x7d, 0x80, 0x7d, 0x76, 0x77, 0x77, 0x71, 0x6b, 0x6a, 0x67, 0x6
             -b, 0x68, 0x60, 0x61, 0x5c, 0x5e, 0x63, 0x5d, 0x5a, 0x58, 0x5e, 0x5a, 0x52, 0x5c, 0x59, 0x51, 0x57, 0x58, 0x55, 0x57, 0x5
             -3, 0x55, 0x5a, 0x58, 0x5a, 0x56, 0x5a, 0x5e, 0x5c, 0x5f, 0x5c, 0x5d, 0x61, 0x5d, 0x5f, 0x62, 0x5c, 0x5e, 0x61, 0x61, 0x6
             -7, 0x64, 0x62, 0x63, 0x64, 0x66, 0x67, 0x66, 0x68, 0x6f, 0x6d, 0x70, 0x6d, 0x69, 0x73, 0x75, 0x6d, 0x72, 0x78, 0x78, 0x7
             -e, 0x75, 0x78, 0x7c, 0x7a, 0x85, 0x81, 0x7f, 0x89, 0x87, 0x81, 0x85, 0x85, 0x85, 0x89, 0x8a, 0x8e, 0x8c, 0x8a, 0x8d, 0x8
             -c, 0x8a, 0x8f, 0x90, 0x8f, 0x91, 0x94, 0x93, 0x93, 0x94, 0x93, 0x97, 0x94, 0x90, 0x94, 0x93, 0x93, 0x92, 0x95, 0x9a, 0x9
             -6, 0x98, 0x9a, 0x92, 0x92, 0x92, 0x8f, 0x94, 0x96, 0x95, 0x97, 0x99, 0x94, 0x93, 0x91, 0x90, 0x8d, 0x8d, 0x8f, 0x90, 0x9
             -1, 0x8c, 0x8d, 0x87, 0x83, 0x87, 0x84, 0x7f, 0x7f, 0x7f, 0x7b, 0x7d, 0x7c, 0x7a, 0x70, 0x70, 0x75, 0x6f, 0x6b, 0x6d, 0x7
             -0, 0x6e, 0x6f, 0x71, 0x6f, 0x6a, 0x70, 0x71, 0x69, 0x63, 0x67, 0x6b, 0x6a, 0x6d, 0x67, 0x66, 0x68, 0x69, 0x6b, 0x65, 0x6
             -3, 0x6a, 0x6d, 0x6c, 0x6f, 0x6a, 0x6a, 0x6e, 0x6c, 0x69, 0x6a, 0x6f, 0x71, 0x74, 0x73, 0x76, 0x73, 0x72, 0x75, 0x71, 0x7
             -1, 0x71, 0x7c, 0x7c, 0x7c, 0x81, 0x78, 0x7d, 0x7e, 0x7e, 0x77, 0x75, 0x82, 0x81, 0x7f, 0x7f, 0x81, 0x82, 0x83, 0x83, 0x7
             -d, 0x7f, 0x82, 0x87, 0x87, 0x86, 0x8a, 0x81, 0x86, 0x8c, 0x84, 0x83, 0x89, 0x8c, 0x8a, 0x8f, 0x8f, 0x8d, 0x8e, 0x8f, 0x8
             -e, 0x89, 0x8f, 0x92, 0x8e, 0x8f, 0x91, 0x8c, 0x8b, 0x8c, 0x8a, 0x8a, 0x8a, 0x8b, 0x8d, 0x8b, 0x8b, 0x89, 0x88, 0x89, 0x8
             -5, 0x88, 0x86, 0x81, 0x88, 0x86, 0x83, 0x86, 0x85, 0x83, 0x81, 0x81, 0x7f, 0x7e, 0x80, 0x81, 0x7f, 0x80, 0x82, 0x7d, 0x7
             -e, 0x7f, 0x80, 0x7f, 0x7a, 0x7d, 0x7e, 0x7e, 0x80, 0x7b, 0x78, 0x7a, 0x7a, 0x7c, 0x7b, 0x79, 0x7b, 0x79, 0x7a, 0x7f, 0x7
             -d, 0x7c, 0x7d, 0x7c, 0x79, 0x7a, 0x77, 0x77, 0x7a, 0x79, 0x7b, 0x7a, 0x79, 0x79, 0x7a, 0x7c, 0x7c, 0x7b, 0x77, 0x77, 0x7
             -d, 0x81, 0x7e, 0x77, 0x7a, 0x7f, 0x83, 0x82, 0x7b, 0x79, 0x7f, 0x83, 0x7f, 0x7a, 0x79, 0x7c, 0x80, 0x81, 0x7d, 0x7b, 0x7
             -d, 0x80, 0x80, 0x7b, 0x79, 0x7c, 0x7f, 0x80, 0x7d, 0x7c, 0x81, 0x83, 0x80, 0x7f, 0x7e, 0x81, 0x84, 0x82, 0x7d, 0x80, 0x8
             -2, 0x80, 0x81, 0x7e, 0x80, 0x84, 0x85, 0x80, 0x7e, 0x80, 0x81, 0x83, 0x81, 0x80, 0x7f, 0x83, 0x84, 0x82, 0x81, 0x7f, 0x7
             -f, 0x80, 0x80, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x80, 0x80, 0x7e, 0x7e, 0x80, 0x80, 0x7f, 0x7f, 0x7f, 0x80, 0x81, 0x80, 0x7
             -e, 0x80, 0x81, 0x81, 0x81, 0x7e, 0x7d, 0x7d, 0x7d, 0x7c, 0x7e, 0x7d, 0x7c, 0x7b, 0x7b, 0x7b, 0x7d, 0x7e, 0x7d, 0x7c, 0x7
             -9, 0x7d, 0x7e, 0x7d, 0x7c, 0x7b, 0x7f, 0x80, 0x7d, 0x7a, 0x7c, 0x7c, 0x7d, 0x7e, 0x7c, 0x7c, 0x7d, 0x7f, 0x7d, 0x7c, 0x7
             -c, 0x7d, 0x7f, 0x7c, 0x7c, 0x7c, 0x7a, 0x7e, 0x7f, 0x7f, 0x7d, 0x7b, 0x7d, 0x7b, 0x7f, 0x7c, 0x7c, 0x7b, 0x7d, 0x7d, 0x7
             -c, 0x7c, 0x7d, 0x7d, 0x78, 0x7d, 0x7a, 0x79, 0x7b, 0x7e, 0x7a, 0x78, 0x7f, 0x7a, 0x7a, 0x7a, 0x79, 0x7d, 0x7e, 0x79, 0x7
             -b, 0x7b, 0x7c, 0x78, 0x7e, 0x80, 0x7b, 0x79, 0x7b, 0x80, 0x77, 0x80, 0x7f, 0x7f, 0x7b, 0x77, 0x7d, 0x7c, 0x80, 0x77, 0x7
             -b, 0x7e, 0x7b, 0x7c, 0x7c, 0x7b, 0x7c, 0x7b, 0x7d, 0x7b, 0x77, 0x7b, 0x7d, 0x7a, 0x7a, 0x7c, 0x78, 0x7d, 0x75, 0x79, 0x7
             -d, 0x7d, 0x81, 0x78, 0x7a, 0x77, 0x81, 0x7d, 0x79, 0x79, 0x74, 0x79, 0x7f, 0x7c, 0x77, 0x7b, 0x75, 0x78, 0x79, 0x7a, 0x7
             -c, 0x7c, 0x7a, 0x79, 0x7e, 0x77, 0x7a, 0x80, 0x7c, 0x77, 0x77, 0x80, 0x82, 0x7c, 0x78, 0x7b, 0x81, 0x82, 0x83, 0x83, 0x7
             -d, 0x7a, 0x85, 0x7f, 0x81, 0x82, 0x78, 0x84, 0x7f, 0x84, 0x7f, 0x7e, 0x84, 0x7d, 0x86, 0x7e, 0x7b, 0x7f, 0x7c, 0x82, 0x8
             -1, 0x7b, 0x7f, 0x7a, 0x81, 0x7c, 0x81, 0x86, 0x7c, 0x7e, 0x82, 0x7c, 0x81, 0x83, 0x7b, 0x86, 0x7b, 0x85, 0x87, 0x8f, 0x7
             -9, 0x6b, 0xa7, 0xa0, 0x85, 0x6c, 0x72, 0x88, 0x88, 0x8a, 0x84, 0x76, 0x73, 0x86, 0x94, 0x7d, 0x72, 0x59, 0x6e, 0xbb, 0x8
             -8, 0x69, 0x6d, 0x79, 0x76, 0x79, 0x90, 0x63, 0x78, 0x8e, 0x96, 0xad, 0x9b, 0x7d, 0x77, 0x5c, 0x73, 0x92, 0x71, 0x65, 0x6
             -3, 0x81, 0x6a, 0x6c, 0x7a, 0x77, 0x78, 0x60, 0x6a, 0x64, 0x6f, 0x7c, 0x74, 0x68, 0x69, 0x6b, 0x6f, 0x68, 0x72, 0x7f, 0x6
             -f, 0x6b, 0x68, 0x7c, 0x7c, 0x76, 0x7c, 0x78, 0x72, 0x6a, 0x69, 0x79, 0x72, 0x63, 0x74, 0x70, 0x71, 0x71, 0x79, 0x7e, 0x6
             -a, 0x6c, 0x89, 0x80, 0x6e, 0x8f, 0x92, 0x99, 0x94, 0x98, 0x9a, 0x8b, 0x98, 0x9b, 0x9e, 0x91, 0x6b, 0x79, 0x8d, 0x90, 0x9
             -0, 0x7f, 0x78, 0x68, 0x68, 0x80, 0x8c, 0x76, 0x78, 0x76, 0x72, 0x86, 0x79, 0x8f, 0x83, 0x64, 0x73, 0x85, 0x8c, 0x80, 0x8
             -5, 0x88, 0x7a, 0x6d, 0x7c, 0x84, 0x7c, 0x7e, 0x79, 0x73, 0x73, 0x7f, 0x7c, 0x71, 0x78, 0x77, 0x79, 0x76, 0x74, 0x7a, 0x7
             -f, 0x83, 0x76, 0x7e, 0x7f, 0x77, 0x82, 0x7f, 0x73, 0x7b, 0x8e, 0x75, 0x75, 0x77, 0x7c, 0x8a, 0x7c, 0x82, 0x77, 0x7e, 0x7
             -4, 0x78, 0x94, 0x88, 0x75, 0x77, 0x91, 0x86, 0x8a, 0x87, 0x7d, 0x8b, 0x89, 0x8a, 0x8b, 0x8c, 0x84, 0x8f, 0x98, 0x8f, 0x8
             -1, 0x81, 0x8d, 0x93, 0x94, 0x8a, 0x83, 0x88, 0x92, 0x90, 0x8f, 0x83, 0x80, 0x87, 0x84, 0x85, 0x80, 0x88, 0x7c, 0x75, 0x8
             -3, 0x7f, 0x75, 0x7e, 0x85, 0x80, 0x7f, 0x79, 0x73, 0x80, 0x85, 0x75, 0x73, 0x77, 0x75, 0x70, 0x77, 0x7e, 0x7f, 0x72, 0x6
             -d, 0x72, 0x62, 0x6c, 0x80, 0x7b, 0x68, 0x60, 0x62, 0x66, 0x6e, 0x71, 0x72, 0x68, 0x5e, 0x64, 0x6c, 0x6b, 0x78, 0x74, 0x6
             -0, 0x6b, 0x75, 0x6f, 0x6d, 0x6f, 0x6b, 0x70, 0x67, 0x59, 0x5f, 0x68, 0x6e, 0x6c, 0x70, 0x7b, 0x7d, 0x77, 0x81, 0x95, 0x9
             -b, 0x9d, 0xa6, 0xa6, 0xa7, 0xad, 0xb5, 0xc7, 0xcd, 0xc1, 0xbe, 0xc8, 0xc7, 0xcb, 0xd0, 0xc1, 0xbb, 0xbd, 0xb9, 0xb5, 0xb
             -0, 0xaa, 0xae, 0xa7, 0x9a, 0xa7, 0xa9, 0x9f, 0xa7, 0xa1, 0x94, 0xa0, 0xa1, 0x9d, 0x9f, 0xa0, 0x9d, 0x92, 0x8d, 0x8a, 0x8
             -b, 0x93, 0x8e, 0x7a, 0x74, 0x6f, 0x6e, 0x60, 0x58, 0x5b, 0x48, 0x3d, 0x37};
  16          uint8 intep;
  17          
  18          uint32 setInteger(char* p){ // Get an integer from binary file
  19   1              uint32 *ptr = (uint32*) p;
  20   1              return *ptr;
  21   1      }
  22          
  23          void readRiffChunk(char* wave, uint32* chunk_size){
  24   1              if (strncmp (wave,"RIFF",4) != 0){ //Check if has the correct header
  25   2              LCD_Char_ClearDisplay();
  26   2              LCD_Char_PrintString("No RIFF");
  27   2              while(1);
  28   2          }
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 6   

  29   1              
  30   1              *chunk_size = setInteger(&wave[4]); //Get size of file.
  31   1              
  32   1              if (strncmp (&wave[8],"WAVE",4) != 0){ //Check if has the correct header
  33   2              LCD_Char_ClearDisplay();
  34   2              LCD_Char_PrintString("No WAVE");
  35   2                      while(1);
  36   2              }
  37   1                      
  38   1      }
  39          
  40          void readFmtSubChunk(char* wave, uint32* subchunk_size, uint16* audio_format, uint16* num_channels, uint32
             -* sample_rate, uint32* byte_rate, uint16* block_align, uint16* bits_per_sample){
  41   1              
  42   1      
  43   1              if (strncmp (wave,"fmt ",4) != 0){ //Check if has the correct header
  44   2              LCD_Char_ClearDisplay();
  45   2              LCD_Char_PrintString("No fmt");
  46   2                      while(1);
  47   2              }
  48   1      
  49   1              *subchunk_size = setInteger(&wave[4]); //Needed to know where the data subchunk starts
  50   1              *audio_format = (uint16) setInteger(&wave[8]); //Audio format
  51   1              *num_channels = (uint16) setInteger(&wave[10]); //Number of channels
  52   1              *sample_rate = setInteger(&wave[12]); //Sample rate
  53   1              *byte_rate = setInteger(&wave[16]);
  54   1              *block_align = (uint16) setInteger(&wave[20]);
  55   1              *bits_per_sample = (uint16) setInteger(&wave[22]);
  56   1              
  57   1      }
  58          
  59          void readDataSubChunk(char* wave, uint32* chunk_size){
  60   1              if (strncmp (wave,"data",4) != 0){ //Check if has the correct header
  61   2              LCD_Char_ClearDisplay();
  62   2              LCD_Char_PrintString("No data");
  63   2                      while(1);
  64   2              }
  65   1              
  66   1              *chunk_size = setInteger(&wave[4]); //Get size of file.
  67   1                              
  68   1      }
  69          
  70          static CY_ISR( isrWAV_Interrupts ){
  71   1          intep = 1 ;
  72   1      }
  73          
  74          int main()
  75          {
  76   1          char *riff, *fmt, *my_data, *audio_data;
  77   1              uint32 chunk_size, sample_rate, subchunk_size, byte_rate, data_size;
  78   1              uint16 audio_format, num_channels, bits_per_sample, block_align;
  79   1          
  80   1          uint32 i = 0; //Indice del siguiente dato a enviar
  81   1          uint8 play = 0;
  82   1          
  83   1          LCD_Char_Start();
  84   1          LCD_Char_ClearDisplay();
  85   1              
  86   1          //Start reading RIFF Chunk
  87   1              
  88   1              riff = wave;
  89   1              readRiffChunk(riff, &chunk_size);
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 7   

  90   1          
  91   1          //Read fmt subchunk
  92   1      
  93   1              fmt = &wave[12];
  94   1              readFmtSubChunk(fmt, &subchunk_size, &audio_format, &num_channels, &sample_rate, &byte_rate, &block_align
             -, &bits_per_sample);
  95   1      
  96   1          //Read data subchunk
  97   1          
  98   1              my_data = fmt + 8 + subchunk_size;
  99   1              readDataSubChunk(my_data, &data_size);
 100   1      
 101   1              audio_data = my_data + 8; // Keep only the sound data.
 102   1          
 103   1          VDAC8_Start(); // Se inicializa el DAC
 104   1          CyGlobalIntEnable; /* Uncomment this line to enable global interrupts. */
 105   1          
 106   1          isrWAV_Start(); //Activamos el ISR
 107   1          isrWAV_SetVector (&isrWAV_Interrupts);
 108   1          
 109   1          while(i < 8000)
 110   1          {
 111   2              if(!Pin_Play_Pause_Read()){ //Si pulsamos play, hacemos que suene
 112   3                  play ^= 1;
 113   3                  while(!Pin_Play_Pause_Read()); //Mientras pulsado
 114   3              }
 115   2              if(intep && play){
 116   3                  intep = 0;
 117   3                  VDAC8_SetValue(audio_data[i]);
 118   3                  ++i;
 119   3              }       
 120   2          }
 121   1          LCD_Char_ClearDisplay();
 122   1          LCD_Char_PrintString("Terminado");
 123   1          while(1);
 124   1      }
 125          
 126          /* [] END OF FILE */
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _setInteger (BEGIN)
                                           ; SOURCE LINE # 18
0000 900000      R     MOV     DPTR,#p
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 19
0006 900000      R     MOV     DPTR,#p
0009 120000      E     LCALL   ?C?PLDXDATA
000C 900000      R     MOV     DPTR,#ptr
000F 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 20
0012 900000      R     MOV     DPTR,#ptr
0015 120000      E     LCALL   ?C?PLDXDATA
0018 120000      E     LCALL   ?C?LLDPTR
                                           ; SOURCE LINE # 21
001B         ?C0001:
001B 22                RET     
             ; FUNCTION _setInteger (END)

             ; FUNCTION _readRiffChunk (BEGIN)
                                           ; SOURCE LINE # 23
0000 900000      R     MOV     DPTR,#wave
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 24
0006 900000      R     MOV     DPTR,#wave
0009 120000      E     LCALL   ?C?PLDXDATA
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH ?SC_0
0016 7900        R     MOV     R1,#LOW ?SC_0
0018 900000      E     MOV     DPTR,#?_strncmp?BYTE+03H
001B 120000      E     LCALL   ?C?PSTXDATA
001E 900000      E     MOV     DPTR,#?_strncmp?BYTE+06H
0021 E4                CLR     A
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 7404              MOV     A,#04H
0026 F0                MOVX    @DPTR,A
0027 D001              POP     AR1
0029 D002              POP     AR2
002B D003              POP     AR3
002D 120000      E     LCALL   _strncmp
0030 EF                MOV     A,R7
0031 6010              JZ      ?C0002
                                           ; SOURCE LINE # 25
0033 7F01              MOV     R7,#01H
0035 120000      E     LCALL   _LCD_Char_WriteControl
                                           ; SOURCE LINE # 26
0038 7BFF              MOV     R3,#0FFH
003A 7A00        R     MOV     R2,#HIGH ?SC_5
003C 7900        R     MOV     R1,#LOW ?SC_5
003E 120000      E     LCALL   _LCD_Char_PrintString
0041         ?C0003:
                                           ; SOURCE LINE # 27
0041 80FE              SJMP    ?C0003
                                           ; SOURCE LINE # 28
0043         ?C0002:
                                           ; SOURCE LINE # 30
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 9   

0043 900000      R     MOV     DPTR,#wave
0046 120000      E     LCALL   ?C?PLDXDATA
0049 E9                MOV     A,R1
004A 2404              ADD     A,#04H
004C F9                MOV     R1,A
004D EA                MOV     A,R2
004E 3400              ADDC    A,#00H
0050 FA                MOV     R2,A
0051 120000      R     LCALL   _setInteger
0054 900000      R     MOV     DPTR,#chunk_size
0057 120000      E     LCALL   ?C?PLDXDATA
005A 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 32
005D 900000      R     MOV     DPTR,#wave
0060 120000      E     LCALL   ?C?PLDXDATA
0063 E9                MOV     A,R1
0064 2408              ADD     A,#08H
0066 F9                MOV     R1,A
0067 EA                MOV     A,R2
0068 3400              ADDC    A,#00H
006A FA                MOV     R2,A
006B C003              PUSH    AR3
006D C002              PUSH    AR2
006F C001              PUSH    AR1
0071 7BFF              MOV     R3,#0FFH
0073 7A00        R     MOV     R2,#HIGH ?SC_13
0075 7900        R     MOV     R1,#LOW ?SC_13
0077 900000      E     MOV     DPTR,#?_strncmp?BYTE+03H
007A 120000      E     LCALL   ?C?PSTXDATA
007D 900000      E     MOV     DPTR,#?_strncmp?BYTE+06H
0080 E4                CLR     A
0081 F0                MOVX    @DPTR,A
0082 A3                INC     DPTR
0083 7404              MOV     A,#04H
0085 F0                MOVX    @DPTR,A
0086 D001              POP     AR1
0088 D002              POP     AR2
008A D003              POP     AR3
008C 120000      E     LCALL   _strncmp
008F EF                MOV     A,R7
0090 6010              JZ      ?C0008
                                           ; SOURCE LINE # 33
0092 7F01              MOV     R7,#01H
0094 120000      E     LCALL   _LCD_Char_WriteControl
                                           ; SOURCE LINE # 34
0097 7BFF              MOV     R3,#0FFH
0099 7A00        R     MOV     R2,#HIGH ?SC_18
009B 7900        R     MOV     R1,#LOW ?SC_18
009D 120000      E     LCALL   _LCD_Char_PrintString
00A0         ?C0006:
                                           ; SOURCE LINE # 35
00A0 80FE              SJMP    ?C0006
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 38
00A2         ?C0008:
00A2 22                RET     
             ; FUNCTION _readRiffChunk (END)

             ; FUNCTION _readFmtSubChunk (BEGIN)
                                           ; SOURCE LINE # 40
0000 900000      R     MOV     DPTR,#wave
0003 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 10  

                                           ; SOURCE LINE # 43
0006 900000      R     MOV     DPTR,#wave
0009 120000      E     LCALL   ?C?PLDXDATA
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH ?SC_26
0016 7900        R     MOV     R1,#LOW ?SC_26
0018 900000      E     MOV     DPTR,#?_strncmp?BYTE+03H
001B 120000      E     LCALL   ?C?PSTXDATA
001E 900000      E     MOV     DPTR,#?_strncmp?BYTE+06H
0021 E4                CLR     A
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 7404              MOV     A,#04H
0026 F0                MOVX    @DPTR,A
0027 D001              POP     AR1
0029 D002              POP     AR2
002B D003              POP     AR3
002D 120000      E     LCALL   _strncmp
0030 EF                MOV     A,R7
0031 6010              JZ      ?C0009
                                           ; SOURCE LINE # 44
0033 7F01              MOV     R7,#01H
0035 120000      E     LCALL   _LCD_Char_WriteControl
                                           ; SOURCE LINE # 45
0038 7BFF              MOV     R3,#0FFH
003A 7A00        R     MOV     R2,#HIGH ?SC_31
003C 7900        R     MOV     R1,#LOW ?SC_31
003E 120000      E     LCALL   _LCD_Char_PrintString
0041         ?C0010:
                                           ; SOURCE LINE # 46
0041 80FE              SJMP    ?C0010
                                           ; SOURCE LINE # 47
0043         ?C0009:
                                           ; SOURCE LINE # 49
0043 900000      R     MOV     DPTR,#wave
0046 120000      E     LCALL   ?C?PLDXDATA
0049 E9                MOV     A,R1
004A 2404              ADD     A,#04H
004C F9                MOV     R1,A
004D EA                MOV     A,R2
004E 3400              ADDC    A,#00H
0050 FA                MOV     R2,A
0051 120000      R     LCALL   _setInteger
0054 900000      R     MOV     DPTR,#subchunk_size
0057 120000      E     LCALL   ?C?PLDXDATA
005A 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 50
005D 900000      R     MOV     DPTR,#wave
0060 120000      E     LCALL   ?C?PLDXDATA
0063 E9                MOV     A,R1
0064 2408              ADD     A,#08H
0066 F9                MOV     R1,A
0067 EA                MOV     A,R2
0068 3400              ADDC    A,#00H
006A FA                MOV     R2,A
006B 120000      R     LCALL   _setInteger
006E 900000      R     MOV     DPTR,#audio_format
0071 120000      E     LCALL   ?C?PLDXDATA
0074 EE                MOV     A,R6
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 11  

0075 8FF0              MOV     B,R7
0077 120000      E     LCALL   ?C?ISTPTR
                                           ; SOURCE LINE # 51
007A 900000      R     MOV     DPTR,#wave
007D 120000      E     LCALL   ?C?PLDXDATA
0080 E9                MOV     A,R1
0081 240A              ADD     A,#0AH
0083 F9                MOV     R1,A
0084 EA                MOV     A,R2
0085 3400              ADDC    A,#00H
0087 FA                MOV     R2,A
0088 120000      R     LCALL   _setInteger
008B 900000      R     MOV     DPTR,#num_channels
008E 120000      E     LCALL   ?C?PLDXDATA
0091 EE                MOV     A,R6
0092 8FF0              MOV     B,R7
0094 120000      E     LCALL   ?C?ISTPTR
                                           ; SOURCE LINE # 52
0097 900000      R     MOV     DPTR,#wave
009A 120000      E     LCALL   ?C?PLDXDATA
009D E9                MOV     A,R1
009E 240C              ADD     A,#0CH
00A0 F9                MOV     R1,A
00A1 EA                MOV     A,R2
00A2 3400              ADDC    A,#00H
00A4 FA                MOV     R2,A
00A5 120000      R     LCALL   _setInteger
00A8 900000      R     MOV     DPTR,#sample_rate
00AB 120000      E     LCALL   ?C?PLDXDATA
00AE 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 53
00B1 900000      R     MOV     DPTR,#wave
00B4 120000      E     LCALL   ?C?PLDXDATA
00B7 E9                MOV     A,R1
00B8 2410              ADD     A,#010H
00BA F9                MOV     R1,A
00BB EA                MOV     A,R2
00BC 3400              ADDC    A,#00H
00BE FA                MOV     R2,A
00BF 120000      R     LCALL   _setInteger
00C2 900000      R     MOV     DPTR,#byte_rate
00C5 120000      E     LCALL   ?C?PLDXDATA
00C8 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 54
00CB 900000      R     MOV     DPTR,#wave
00CE 120000      E     LCALL   ?C?PLDXDATA
00D1 E9                MOV     A,R1
00D2 2414              ADD     A,#014H
00D4 F9                MOV     R1,A
00D5 EA                MOV     A,R2
00D6 3400              ADDC    A,#00H
00D8 FA                MOV     R2,A
00D9 120000      R     LCALL   _setInteger
00DC 900000      R     MOV     DPTR,#block_align
00DF 120000      E     LCALL   ?C?PLDXDATA
00E2 EE                MOV     A,R6
00E3 8FF0              MOV     B,R7
00E5 120000      E     LCALL   ?C?ISTPTR
                                           ; SOURCE LINE # 55
00E8 900000      R     MOV     DPTR,#wave
00EB 120000      E     LCALL   ?C?PLDXDATA
00EE E9                MOV     A,R1
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 12  

00EF 2416              ADD     A,#016H
00F1 F9                MOV     R1,A
00F2 EA                MOV     A,R2
00F3 3400              ADDC    A,#00H
00F5 FA                MOV     R2,A
00F6 120000      R     LCALL   _setInteger
00F9 900000      R     MOV     DPTR,#bits_per_sample
00FC 120000      E     LCALL   ?C?PLDXDATA
00FF EE                MOV     A,R6
0100 8FF0              MOV     B,R7
0102 120000      E     LCALL   ?C?ISTPTR
                                           ; SOURCE LINE # 57
0105 22                RET     
             ; FUNCTION _readFmtSubChunk (END)

             ; FUNCTION _readDataSubChunk (BEGIN)
                                           ; SOURCE LINE # 59
0000 900000      R     MOV     DPTR,#wave
0003 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 60
0006 900000      R     MOV     DPTR,#wave
0009 120000      E     LCALL   ?C?PLDXDATA
000C C003              PUSH    AR3
000E C002              PUSH    AR2
0010 C001              PUSH    AR1
0012 7BFF              MOV     R3,#0FFH
0014 7A00        R     MOV     R2,#HIGH ?SC_38
0016 7900        R     MOV     R1,#LOW ?SC_38
0018 900000      E     MOV     DPTR,#?_strncmp?BYTE+03H
001B 120000      E     LCALL   ?C?PSTXDATA
001E 900000      E     MOV     DPTR,#?_strncmp?BYTE+06H
0021 E4                CLR     A
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 7404              MOV     A,#04H
0026 F0                MOVX    @DPTR,A
0027 D001              POP     AR1
0029 D002              POP     AR2
002B D003              POP     AR3
002D 120000      E     LCALL   _strncmp
0030 EF                MOV     A,R7
0031 6010              JZ      ?C0013
                                           ; SOURCE LINE # 61
0033 7F01              MOV     R7,#01H
0035 120000      E     LCALL   _LCD_Char_WriteControl
                                           ; SOURCE LINE # 62
0038 7BFF              MOV     R3,#0FFH
003A 7A00        R     MOV     R2,#HIGH ?SC_43
003C 7900        R     MOV     R1,#LOW ?SC_43
003E 120000      E     LCALL   _LCD_Char_PrintString
0041         ?C0014:
                                           ; SOURCE LINE # 63
0041 80FE              SJMP    ?C0014
                                           ; SOURCE LINE # 64
0043         ?C0013:
                                           ; SOURCE LINE # 66
0043 900000      R     MOV     DPTR,#wave
0046 120000      E     LCALL   ?C?PLDXDATA
0049 E9                MOV     A,R1
004A 2404              ADD     A,#04H
004C F9                MOV     R1,A
004D EA                MOV     A,R2
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 13  

004E 3400              ADDC    A,#00H
0050 FA                MOV     R2,A
0051 120000      R     LCALL   _setInteger
0054 900000      R     MOV     DPTR,#chunk_size
0057 120000      E     LCALL   ?C?PLDXDATA
005A 120000      E     LCALL   ?C?LSTPTR
                                           ; SOURCE LINE # 68
005D 22                RET     
             ; FUNCTION _readDataSubChunk (END)

             ; FUNCTION isrWAV_Interrupts (BEGIN)
0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 C085              PUSH    DPH1
0008 C084              PUSH    DPL1
000A C086              PUSH    DPS
000C 758600            MOV     DPS,#00H
000F C000        E     PUSH    ?C?XPAGE1SFR
0011 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 71
0014 900000      R     MOV     DPTR,#intep
0017 7401              MOV     A,#01H
0019 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
001A D000        E     POP     ?C?XPAGE1SFR
001C D086              POP     DPS
001E D084              POP     DPL1
0020 D085              POP     DPH1
0022 D082              POP     DPL
0024 D083              POP     DPH
0026 D0E0              POP     ACC
0028 32                RETI    
             ; FUNCTION isrWAV_Interrupts (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 74
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 80
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7D00              MOV     R5,#00H
0006 7C00              MOV     R4,#00H
0008 900000      R     MOV     DPTR,#i
000B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 81
000E 900000      R     MOV     DPTR,#play
0011 E4                CLR     A
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 83
0013 120000      E     LCALL   LCD_Char_Start
                                           ; SOURCE LINE # 84
0016 7F01              MOV     R7,#01H
0018 120000      E     LCALL   _LCD_Char_WriteControl
                                           ; SOURCE LINE # 88
001B 7B01              MOV     R3,#01H
001D 7A00        R     MOV     R2,#HIGH wave
001F 7900        R     MOV     R1,#LOW wave
0021 900000      R     MOV     DPTR,#riff
0024 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 89
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 14  

0027 900000      R     MOV     DPTR,#riff
002A 120000      E     LCALL   ?C?PLDXDATA
002D C003              PUSH    AR3
002F C002              PUSH    AR2
0031 C001              PUSH    AR1
0033 7B01              MOV     R3,#01H
0035 7A00        R     MOV     R2,#HIGH chunk_size
0037 7900        R     MOV     R1,#LOW chunk_size
0039 900000      R     MOV     DPTR,#?_readRiffChunk?BYTE+03H
003C 120000      E     LCALL   ?C?PSTXDATA
003F D001              POP     AR1
0041 D002              POP     AR2
0043 D003              POP     AR3
0045 120000      R     LCALL   _readRiffChunk
                                           ; SOURCE LINE # 93
0048 7B01              MOV     R3,#01H
004A 7A00        R     MOV     R2,#HIGH wave+0CH
004C 7900        R     MOV     R1,#LOW wave+0CH
004E 900000      R     MOV     DPTR,#fmt
0051 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 94
0054 900000      R     MOV     DPTR,#fmt
0057 120000      E     LCALL   ?C?PLDXDATA
005A C003              PUSH    AR3
005C C002              PUSH    AR2
005E C001              PUSH    AR1
0060 7B01              MOV     R3,#01H
0062 7A00        R     MOV     R2,#HIGH subchunk_size
0064 7900        R     MOV     R1,#LOW subchunk_size
0066 900000      R     MOV     DPTR,#?_readFmtSubChunk?BYTE+03H
0069 120000      E     LCALL   ?C?PSTXDATA
006C 7B01              MOV     R3,#01H
006E 7A00        R     MOV     R2,#HIGH audio_format
0070 7900        R     MOV     R1,#LOW audio_format
0072 900000      R     MOV     DPTR,#?_readFmtSubChunk?BYTE+06H
0075 120000      E     LCALL   ?C?PSTXDATA
0078 7B01              MOV     R3,#01H
007A 7A00        R     MOV     R2,#HIGH num_channels
007C 7900        R     MOV     R1,#LOW num_channels
007E 900000      R     MOV     DPTR,#?_readFmtSubChunk?BYTE+09H
0081 120000      E     LCALL   ?C?PSTXDATA
0084 7B01              MOV     R3,#01H
0086 7A00        R     MOV     R2,#HIGH sample_rate
0088 7900        R     MOV     R1,#LOW sample_rate
008A 900000      R     MOV     DPTR,#?_readFmtSubChunk?BYTE+0CH
008D 120000      E     LCALL   ?C?PSTXDATA
0090 7B01              MOV     R3,#01H
0092 7A00        R     MOV     R2,#HIGH byte_rate
0094 7900        R     MOV     R1,#LOW byte_rate
0096 900000      R     MOV     DPTR,#?_readFmtSubChunk?BYTE+0FH
0099 120000      E     LCALL   ?C?PSTXDATA
009C 7B01              MOV     R3,#01H
009E 7A00        R     MOV     R2,#HIGH block_align
00A0 7900        R     MOV     R1,#LOW block_align
00A2 900000      R     MOV     DPTR,#?_readFmtSubChunk?BYTE+012H
00A5 120000      E     LCALL   ?C?PSTXDATA
00A8 7B01              MOV     R3,#01H
00AA 7A00        R     MOV     R2,#HIGH bits_per_sample
00AC 7900        R     MOV     R1,#LOW bits_per_sample
00AE 900000      R     MOV     DPTR,#?_readFmtSubChunk?BYTE+015H
00B1 120000      E     LCALL   ?C?PSTXDATA
00B4 D001              POP     AR1
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 15  

00B6 D002              POP     AR2
00B8 D003              POP     AR3
00BA 120000      R     LCALL   _readFmtSubChunk
                                           ; SOURCE LINE # 98
00BD 900000      R     MOV     DPTR,#fmt
00C0 120000      E     LCALL   ?C?PLDXDATA
00C3 E9                MOV     A,R1
00C4 2408              ADD     A,#08H
00C6 F9                MOV     R1,A
00C7 EA                MOV     A,R2
00C8 3400              ADDC    A,#00H
00CA FA                MOV     R2,A
00CB 900000      R     MOV     DPTR,#subchunk_size
00CE 120000      E     LCALL   ?C?LLDXDATA
00D1 E9                MOV     A,R1
00D2 2F                ADD     A,R7
00D3 F9                MOV     R1,A
00D4 EA                MOV     A,R2
00D5 3E                ADDC    A,R6
00D6 FA                MOV     R2,A
00D7 EB                MOV     A,R3
00D8 3D                ADDC    A,R5
00D9 FB                MOV     R3,A
00DA 900000      R     MOV     DPTR,#my_data
00DD 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 99
00E0 900000      R     MOV     DPTR,#my_data
00E3 120000      E     LCALL   ?C?PLDXDATA
00E6 C003              PUSH    AR3
00E8 C002              PUSH    AR2
00EA C001              PUSH    AR1
00EC 7B01              MOV     R3,#01H
00EE 7A00        R     MOV     R2,#HIGH data_size
00F0 7900        R     MOV     R1,#LOW data_size
00F2 900000      R     MOV     DPTR,#?_readDataSubChunk?BYTE+03H
00F5 120000      E     LCALL   ?C?PSTXDATA
00F8 D001              POP     AR1
00FA D002              POP     AR2
00FC D003              POP     AR3
00FE 120000      R     LCALL   _readDataSubChunk
                                           ; SOURCE LINE # 101
0101 900000      R     MOV     DPTR,#my_data
0104 120000      E     LCALL   ?C?PLDXDATA
0107 E9                MOV     A,R1
0108 2408              ADD     A,#08H
010A F9                MOV     R1,A
010B EA                MOV     A,R2
010C 3400              ADDC    A,#00H
010E FA                MOV     R2,A
010F 900000      R     MOV     DPTR,#audio_data
0112 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 103
0115 120000      E     LCALL   VDAC8_Start
                                           ; SOURCE LINE # 104
0118 D2AF              SETB    EA
011A 9044F4            MOV     DPTR,#044F4H
011D 74FD              MOV     A,#0FDH
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 106
0120 120000      E     LCALL   isrWAV_Start
                                           ; SOURCE LINE # 107
0123 7E00        R     MOV     R6,#HIGH isrWAV_Interrupts
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 16  

0125 7F00        R     MOV     R7,#LOW isrWAV_Interrupts
0127 120000      E     LCALL   _isrWAV_SetVector
012A         ?C0018:
                                           ; SOURCE LINE # 109
012A 7F40              MOV     R7,#040H
012C 7E1F              MOV     R6,#01FH
012E 7D00              MOV     R5,#00H
0130 7C00              MOV     R4,#00H
0132 900000      R     MOV     DPTR,#i
0135 120000      E     LCALL   ?C?LLDXDATA0
0138 C3                CLR     C
0139 120000      E     LCALL   ?C?ULCMP
013C 5064              JNC     ?C0019
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
013E 120000      E     LCALL   Pin_Play_Pause_Read
0141 EF                MOV     A,R7
0142 7014              JNZ     ?C0020
                                           ; SOURCE LINE # 112
0144 900000      R     MOV     DPTR,#play
0147 E0                MOVX    A,@DPTR
0148 FF                MOV     R7,A
0149 EF                MOV     A,R7
014A 6401              XRL     A,#01H
014C FF                MOV     R7,A
014D 900000      R     MOV     DPTR,#play
0150 EF                MOV     A,R7
0151 F0                MOVX    @DPTR,A
0152         ?C0021:
                                           ; SOURCE LINE # 113
0152 120000      E     LCALL   Pin_Play_Pause_Read
0155 EF                MOV     A,R7
0156 60FA              JZ      ?C0021
0158         ?C0022:
                                           ; SOURCE LINE # 114
0158         ?C0020:
                                           ; SOURCE LINE # 115
0158 900000      R     MOV     DPTR,#intep
015B E0                MOVX    A,@DPTR
015C FF                MOV     R7,A
015D EF                MOV     A,R7
015E 60CA              JZ      ?C0018
0160 900000      R     MOV     DPTR,#play
0163 E0                MOVX    A,@DPTR
0164 FF                MOV     R7,A
0165 EF                MOV     A,R7
0166 60C2              JZ      ?C0018
                                           ; SOURCE LINE # 116
0168 900000      R     MOV     DPTR,#intep
016B E4                CLR     A
016C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 117
016D 900000      R     MOV     DPTR,#i
0170 120000      E     LCALL   ?C?LLDXDATA
0173 900000      R     MOV     DPTR,#audio_data
0176 120000      E     LCALL   ?C?PLDXDATA
0179 E9                MOV     A,R1
017A 2F                ADD     A,R7
017B F9                MOV     R1,A
017C EA                MOV     A,R2
017D 3E                ADDC    A,R6
017E FA                MOV     R2,A
C51 COMPILER V9.51   MAIN                                                                  05/28/2014 15:01:25 PAGE 17  

017F EB                MOV     A,R3
0180 3D                ADDC    A,R5
0181 FB                MOV     R3,A
0182 120000      E     LCALL   ?C?CLDPTR
0185 FF                MOV     R7,A
0186 120000      E     LCALL   _VDAC8_SetValue
                                           ; SOURCE LINE # 118
0189 900000      R     MOV     DPTR,#i
018C 120000      E     LCALL   ?C?LLDXDATA
018F 7B01              MOV     R3,#01H
0191 7A00              MOV     R2,#00H
0193 7900              MOV     R1,#00H
0195 7800              MOV     R0,#00H
0197 120000      E     LCALL   ?C?LADD
019A 900000      R     MOV     DPTR,#i
019D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 120
01A0 8088              SJMP    ?C0018
01A2         ?C0019:
                                           ; SOURCE LINE # 121
01A2 7F01              MOV     R7,#01H
01A4 120000      E     LCALL   _LCD_Char_WriteControl
                                           ; SOURCE LINE # 122
01A7 7BFF              MOV     R3,#0FFH
01A9 7A00        R     MOV     R2,#HIGH ?SC_51
01AB 7900        R     MOV     R1,#LOW ?SC_51
01AD 120000      E     LCALL   _LCD_Char_PrintString
01B0         ?C0024:
                                           ; SOURCE LINE # 123
01B0 80FE              SJMP    ?C0024
01B2 22                RET     
             ; FUNCTION main (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1023    ----
   CONSTANT SIZE    =     61    ----
   XDATA SIZE       =   8001      87
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
