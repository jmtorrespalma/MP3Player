C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst)
                    - CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0 Component Pack 7
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  53          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 2   

  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
  92          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080064u)
  93          
  94          /* IOPINS0_1 Address: CYREG_PRT1_DR Size (bytes): 10 */
  95          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x0008006Cu)
  96          
  97          /* IOPINS0_2 Address: CYREG_PRT2_DR Size (bytes): 10 */
  98          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x00080078u)
  99          
 100          
 101          /*******************************************************************************
 102          * Function Name: ClockSetup
 103          ********************************************************************************
 104          *
 105          * Summary:
 106          *  Performs the initialization of all of the clocks in the device based on the
 107          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 108          *  clocks and setting the necessary dividers to produce the desired frequency. 
 109          *
 110          * Parameters:
 111          *  void
 112          *
 113          * Return:
 114          *  void
 115          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 3   

 116          *******************************************************************************/
 117          static void ClockSetup(void);
 118          static void ClockSetup(void)
 119          {
 120   1              uint32 timeout;
 121   1              uint8 pllLock;
 122   1      
 123   1      
 124   1              /* Configure Digital Clocks based on settings from Clock DWR */
 125   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x0077u);
 126   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 127   1      
 128   1              /* Configure ILO based on settings from Clock DWR */
 129   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 130   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 131   1      
 132   1              /* Configure IMO based on settings from Clock DWR */
 133   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 134   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 135   1      
 136   1              /* Configure PLL based on settings from Clock DWR */
 137   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008u);
 138   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 139   1              /* Wait up to 250us for the PLL to lock */
 140   1              pllLock = 0u;
 141   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 142   1              { 
 143   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 144   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 145   2              }
 146   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 147   1              if (timeout == 0u)
 148   1              {
 149   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 150   2              }
 151   1      
 152   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 153   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 154   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 155   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 156   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 157   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 158   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 159   1      
 160   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x01u
             -)));
 161   1      }
 162          
 163          
 164          /* Analog API Functions */
 165          
 166          
 167          /*******************************************************************************
 168          * Function Name: AnalogSetDefault
 169          ********************************************************************************
 170          *
 171          * Summary:
 172          *  Sets up the analog portions of the chip to default values based on chip
 173          *  configuration options from the project.
 174          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 4   

 175          * Parameters:
 176          *  void
 177          *
 178          * Return:
 179          *  void
 180          *
 181          *******************************************************************************/
 182          static void AnalogSetDefault(void);
 183          static void AnalogSetDefault(void)
 184          {
 185   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 186   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 187   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 188   1              CY_SET_REG8((void CYXDATA *)CYREG_PRT0_AMUX, 0x80u);
 189   1              CY_SET_REG8((void CYXDATA *)CYREG_DAC0_SW3, 0x01u);
 190   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 191   1      }
 192          
 193          
 194          /*******************************************************************************
 195          * Function Name: SetAnalogRoutingPumps
 196          ********************************************************************************
 197          *
 198          * Summary:
 199          * Enables or disables the analog pumps feeding analog routing switches.
 200          * Intended to be called at startup, based on the Vdda system configuration;
 201          * may be called during operation when the user informs us that the Vdda voltage
 202          * crossed the pump threshold.
 203          *
 204          * Parameters:
 205          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 206          *
 207          * Return:
 208          *  void
 209          *
 210          *******************************************************************************/
 211          void SetAnalogRoutingPumps(uint8 enabled)
 212          {
 213   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 214   1              if (enabled != 0u)
 215   1              {
 216   2                      regValue |= 0x00u;
 217   2              }
 218   1              else
 219   1              {
 220   2                      regValue &= (uint8)~0x00u;
 221   2              }
 222   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 223   1      }
 224          
 225          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 226          
 227          
 228          /*******************************************************************************
 229          * Function Name: cyfitter_cfg
 230          ********************************************************************************
 231          * Summary:
 232          *  This function is called by the start-up code for the selected device. It
 233          *  performs all of the necessary device configuration based on the design
 234          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 235          *  as Clocks and Pins as well as any component configuration that is necessary.
 236          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 5   

 237          * Parameters:  
 238          *   void
 239          *
 240          * Return:
 241          *   void
 242          *
 243          *******************************************************************************/
 244          
 245          void cyfitter_cfg(void)
 246          {
 247   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 248   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 249   1      
 250   1              {
 251   2      
 252   2                      CYPACKED typedef struct {
 253   2                              void CYFAR *address;
 254   2                              uint16 size;
 255   2                      } CYPACKED_ATTR cfg_memset_t;
 256   2      
 257   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 258   2                              /* address, size */
 259   2                              {(void CYFAR *)(CYREG_PRT3_DR), 64u},
 260   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 261   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 262   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 263   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 264   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 265   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 266   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 267   2                      };
 268   2      
 269   2                      uint8 CYDATA i;
 270   2      
 271   2                      /* Zero out critical memory blocks before beginning configuration */
 272   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 273   2                      {
 274   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 275   3                              CYMEMZERO(ms->address, ms->size);
 276   3                      }
 277   2      
 278   2                      cfg_write_bytes(cfg_byte_table);
 279   2      
 280   2                      /* Perform normal device configuration. Order is not critical for these items. */
 281   2                      CYMEMZERO((void CYFAR *)(CYREG_PHUB_CFGMEM0_CFG0), 4u);
 282   2                      CYMEMZERO((void CYFAR *)(CYREG_PHUB_CFGMEM1_CFG0), 4u);
 283   2      
 284   2                      /* Enable digital routing */
 285   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 286   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 287   2      
 288   2                      /* Enable UDB array */
 289   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 290   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 291   2              }
 292   1      
 293   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 6   

 294   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 295   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DR), (const void CYFAR *)(BS_IOPINS0_1_VAL), 10u);
 296   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DR), (const void CYFAR *)(BS_IOPINS0_2_VAL), 10u);
 297   1      
 298   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 299   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 300   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 301   1              {
 302   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 303   2              }
 304   1      
 305   1      
 306   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 307   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 308   1              /* Setup clocks based on selections from Clock DWR */
 309   1              ClockSetup();
 310   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 311   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xB1u : 0x80u));
 312   1      
 313   1              /* Perform basic analog initialization to defaults */
 314   1              AnalogSetDefault();
 315   1      
 316   1              /* Configure alternate active mode */
 317   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 318   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 319   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 125
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D77              MOV     R5,#077H
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 126
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 129
0013 904300            MOV     DPTR,#04300H
0016 7402              MOV     A,#02H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 130
0019 904000            MOV     DPTR,#04000H
001C 7408              MOV     A,#08H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
001F 904200            MOV     DPTR,#04200H
0022 7403              MOV     A,#03H
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 134
0025 7B0C              MOV     R3,#0CH
0027 7A01              MOV     R2,#01H
0029 7908              MOV     R1,#08H
002B 120000      E     LCALL   _cyread8
002E 9046A1            MOV     DPTR,#046A1H
0031 EF                MOV     A,R7
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
0033 7B00              MOV     R3,#00H
0035 7A42              MOV     R2,#042H
0037 7922              MOV     R1,#022H
0039 7D08              MOV     R5,#08H
003B 7C00              MOV     R4,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 8   

003D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 138
0040 7B00              MOV     R3,#00H
0042 7A42              MOV     R2,#042H
0044 7920              MOV     R1,#020H
0046 7D51              MOV     R5,#051H
0048 7C12              MOV     R4,#012H
004A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 140
004D 900000      R     MOV     DPTR,#pllLock
0050 E4                CLR     A
0051 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
0052 7F19              MOV     R7,#019H
0054 7E00              MOV     R6,#00H
0056 7D00              MOV     R5,#00H
0058 7C00              MOV     R4,#00H
005A 900000      R     MOV     DPTR,#timeout
005D 120000      E     LCALL   ?C?LSTXDATA
0060         ?C0004:
0060 900000      R     MOV     DPTR,#timeout
0063 120000      E     LCALL   ?C?LLDXDATA
0066 D3                SETB    C
0067 EF                MOV     A,R7
0068 9400              SUBB    A,#00H
006A EE                MOV     A,R6
006B 9400              SUBB    A,#00H
006D 404E              JC      ?C0005
006F 900000      R     MOV     DPTR,#pllLock
0072 E0                MOVX    A,@DPTR
0073 FF                MOV     R7,A
0074 EF                MOV     A,R7
0075 6403              XRL     A,#03H
0077 6044              JZ      ?C0005
                                           ; SOURCE LINE # 142
                                           ; SOURCE LINE # 143
0079 904225            MOV     DPTR,#04225H
007C E0                MOVX    A,@DPTR
007D FF                MOV     R7,A
007E EF                MOV     A,R7
007F 5401              ANL     A,#01H
0081 FF                MOV     R7,A
0082 7E00              MOV     R6,#00H
0084 900000      R     MOV     DPTR,#pllLock
0087 E0                MOVX    A,@DPTR
0088 FE                MOV     R6,A
0089 EE                MOV     A,R6
008A 25E0              ADD     A,ACC
008C FE                MOV     R6,A
008D EE                MOV     A,R6
008E 4F                ORL     A,R7
008F FF                MOV     R7,A
0090 EF                MOV     A,R7
0091 5403              ANL     A,#03H
0093 FF                MOV     R7,A
0094 900000      R     MOV     DPTR,#pllLock
0097 EF                MOV     A,R7
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
0099 7FE0              MOV     R7,#0E0H
009B 7E01              MOV     R6,#01H
009D 7D00              MOV     R5,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 9   

009F 7C00              MOV     R4,#00H
00A1 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 145
00A4 900000      R     MOV     DPTR,#timeout
00A7 120000      E     LCALL   ?C?LLDXDATA
00AA 7BFF              MOV     R3,#0FFH
00AC 7AFF              MOV     R2,#0FFH
00AE 79FF              MOV     R1,#0FFH
00B0 78FF              MOV     R0,#0FFH
00B2 120000      E     LCALL   ?C?LADD
00B5 900000      R     MOV     DPTR,#timeout
00B8 120000      E     LCALL   ?C?LSTXDATA
00BB 80A3              SJMP    ?C0004
00BD         ?C0005:
                                           ; SOURCE LINE # 147
00BD 900000      R     MOV     DPTR,#timeout
00C0 120000      E     LCALL   ?C?LLDXDATA
00C3 EF                MOV     A,R7
00C4 4E                ORL     A,R6
00C5 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
00C7 7F03              MOV     R7,#03H
00C9 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 150
00CC         ?C0007:
                                           ; SOURCE LINE # 153
00CC 7B00              MOV     R3,#00H
00CE 7A40              MOV     R2,#040H
00D0 7904              MOV     R1,#04H
00D2 7D00              MOV     R5,#00H
00D4 7C01              MOV     R4,#01H
00D6 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 154
00D9 904004            MOV     DPTR,#04004H
00DC 7407              MOV     A,#07H
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 155
00DF 904006            MOV     DPTR,#04006H
00E2 E4                CLR     A
00E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
00E4 904008            MOV     DPTR,#04008H
00E7 7448              MOV     A,#048H
00E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 157
00EA 904004            MOV     DPTR,#04004H
00ED E4                CLR     A
00EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
00EF 904001            MOV     DPTR,#04001H
00F2 7402              MOV     A,#02H
00F4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 160
00F5 9043A2            MOV     DPTR,#043A2H
00F8 E0                MOVX    A,@DPTR
00F9 FF                MOV     R7,A
00FA EF                MOV     A,R7
00FB 4401              ORL     A,#01H
00FD FF                MOV     R7,A
00FE 9043A2            MOV     DPTR,#043A2H
0101 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 10  

0102 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
0103 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 183
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 188
002F 90510C            MOV     DPTR,#0510CH
0032 7480              MOV     A,#080H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
0035 905A83            MOV     DPTR,#05A83H
0038 7401              MOV     A,#01H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
003B 905876            MOV     DPTR,#05876H
003E 7444              MOV     A,#044H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 191
0041 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 211
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 11  

                                           ; SOURCE LINE # 213
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0035         ?C0011:
                                           ; SOURCE LINE # 222
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 246
                                           ; SOURCE LINE # 248
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 12  

000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 272
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9408              SUBB    A,#08H
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 273
                                           ; SOURCE LINE # 274
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 275
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 276
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 278
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 281
0063 7B00              MOV     R3,#00H
0065 7A76              MOV     R2,#076H
0067 7900              MOV     R1,#00H
0069 7D04              MOV     R5,#04H
006B 7C00              MOV     R4,#00H
006D 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 282
0070 7B00              MOV     R3,#00H
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 13  

0072 7A76              MOV     R2,#076H
0074 7908              MOV     R1,#08H
0076 7D04              MOV     R5,#04H
0078 7C00              MOV     R4,#00H
007A 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 285
007D 7B01              MOV     R3,#01H
007F 7A50              MOV     R2,#050H
0081 7903              MOV     R1,#03H
0083 120000      E     LCALL   _cyread8
0086 EF                MOV     A,R7
0087 4402              ORL     A,#02H
0089 FD                MOV     R5,A
008A 7B01              MOV     R3,#01H
008C 7A50              MOV     R2,#050H
008E 7903              MOV     R1,#03H
0090 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 286
0093 7B01              MOV     R3,#01H
0095 7A50              MOV     R2,#050H
0097 7913              MOV     R1,#013H
0099 120000      E     LCALL   _cyread8
009C EF                MOV     A,R7
009D 4402              ORL     A,#02H
009F FD                MOV     R5,A
00A0 7B01              MOV     R3,#01H
00A2 7A50              MOV     R2,#050H
00A4 7913              MOV     R1,#013H
00A6 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 289
00A9 9043A0            MOV     DPTR,#043A0H
00AC E0                MOVX    A,@DPTR
00AD FF                MOV     R7,A
00AE EF                MOV     A,R7
00AF 4440              ORL     A,#040H
00B1 FF                MOV     R7,A
00B2 9043A0            MOV     DPTR,#043A0H
00B5 EF                MOV     A,R7
00B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 290
00B7 9043C2            MOV     DPTR,#043C2H
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 4410              ORL     A,#010H
00BF FF                MOV     R7,A
00C0 9043C2            MOV     DPTR,#043C2H
00C3 EF                MOV     A,R7
00C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 291
                                           ; SOURCE LINE # 294
00C5 7B08              MOV     R3,#08H
00C7 7A00              MOV     R2,#00H
00C9 7964              MOV     R1,#064H
00CB C003              PUSH    AR3
00CD C002              PUSH    AR2
00CF C001              PUSH    AR1
00D1 7B00              MOV     R3,#00H
00D3 7A51              MOV     R2,#051H
00D5 7902              MOV     R1,#02H
00D7 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00DA 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 14  

00DD D001              POP     AR1
00DF D002              POP     AR2
00E1 D003              POP     AR3
00E3 7F08              MOV     R7,#08H
00E5 7E00              MOV     R6,#00H
00E7 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 295
00EA 7B08              MOV     R3,#08H
00EC 7A00              MOV     R2,#00H
00EE 796C              MOV     R1,#06CH
00F0 C003              PUSH    AR3
00F2 C002              PUSH    AR2
00F4 C001              PUSH    AR1
00F6 7B00              MOV     R3,#00H
00F8 7A51              MOV     R2,#051H
00FA 7910              MOV     R1,#010H
00FC 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00FF 120000      E     LCALL   ?C?PSTXDATA
0102 D001              POP     AR1
0104 D002              POP     AR2
0106 D003              POP     AR3
0108 7F0A              MOV     R7,#0AH
010A 7E00              MOV     R6,#00H
010C 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 296
010F 7B08              MOV     R3,#08H
0111 7A00              MOV     R2,#00H
0113 7978              MOV     R1,#078H
0115 C003              PUSH    AR3
0117 C002              PUSH    AR2
0119 C001              PUSH    AR1
011B 7B00              MOV     R3,#00H
011D 7A51              MOV     R2,#051H
011F 7920              MOV     R1,#020H
0121 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0124 120000      E     LCALL   ?C?PSTXDATA
0127 D001              POP     AR1
0129 D002              POP     AR2
012B D003              POP     AR3
012D 7F0A              MOV     R7,#0AH
012F 7E00              MOV     R6,#00H
0131 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 299
0134 904322            MOV     DPTR,#04322H
0137 E0                MOVX    A,@DPTR
0138 FF                MOV     R7,A
0139 EF                MOV     A,R7
013A 4408              ORL     A,#08H
013C FF                MOV     R7,A
013D 904322            MOV     DPTR,#04322H
0140 EF                MOV     A,R7
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 300
0142 9046EC            MOV     DPTR,#046ECH
0145 E0                MOVX    A,@DPTR
0146 FF                MOV     R7,A
0147 EF                MOV     A,R7
0148 C3                CLR     C
0149 9405              SUBB    A,#05H
014B 5006              JNC     ?C0016
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 15  

014D 904689            MOV     DPTR,#04689H
0150 743A              MOV     A,#03AH
0152 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
0153         ?C0016:
                                           ; SOURCE LINE # 307
0153 904800            MOV     DPTR,#04800H
0156 74F1              MOV     A,#0F1H
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 309
0159 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 311
015C 904800            MOV     DPTR,#04800H
015F 74B1              MOV     A,#0B1H
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
0162 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 317
0165 7B00              MOV     R3,#00H
0167 7A43              MOV     R2,#043H
0169 79A0              MOV     R1,#0A0H
016B C003              PUSH    AR3
016D C002              PUSH    AR2
016F C001              PUSH    AR1
0171 7B00              MOV     R3,#00H
0173 7A43              MOV     R2,#043H
0175 79B0              MOV     R1,#0B0H
0177 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
017A 120000      E     LCALL   ?C?PSTXDATA
017D D001              POP     AR1
017F D002              POP     AR2
0181 D003              POP     AR3
0183 7F0E              MOV     R7,#0EH
0185 7E00              MOV     R6,#00H
0187 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 318
018A 9043B0            MOV     DPTR,#043B0H
018D E0                MOVX    A,@DPTR
018E FF                MOV     R7,A
018F EF                MOV     A,R7
0190 54FD              ANL     A,#0FDH
0192 FF                MOV     R7,A
0193 EF                MOV     A,R7
0194 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
0195 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    814    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.51   CYFITTER_CFG                                                          05/23/2014 15:22:12 PAGE 16  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
